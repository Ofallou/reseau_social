{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin-dashboard/admin-dashboard.component.css","webpack:///./src/app/admin-dashboard/admin-dashboard.component.html","webpack:///./src/app/admin-dashboard/admin-dashboard.component.ts","webpack:///./src/app/admin.guard.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/chat-window/chat-window.component.css","webpack:///./src/app/chat-window/chat-window.component.html","webpack:///./src/app/chat-window/chat-window.component.ts","webpack:///./src/app/chat/chat.service.ts","webpack:///./src/app/comment.service.ts","webpack:///./src/app/comments/comments.component.css","webpack:///./src/app/comments/comments.component.html","webpack:///./src/app/comments/comments.component.ts","webpack:///./src/app/config.ts","webpack:///./src/app/friendslist/friendslist.component.css","webpack:///./src/app/friendslist/friendslist.component.html","webpack:///./src/app/friendslist/friendslist.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/invitation-request/invitation-request.component.css","webpack:///./src/app/invitation-request/invitation-request.component.html","webpack:///./src/app/invitation-request/invitation-request.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/lost-password/lost-password.component.css","webpack:///./src/app/lost-password/lost-password.component.html","webpack:///./src/app/lost-password/lost-password.component.ts","webpack:///./src/app/main/main.component.css","webpack:///./src/app/main/main.component.html","webpack:///./src/app/main/main.component.ts","webpack:///./src/app/member-action.service.ts","webpack:///./src/app/member-search/member-search.component.css","webpack:///./src/app/member-search/member-search.component.html","webpack:///./src/app/member-search/member-search.component.ts","webpack:///./src/app/member-space/member-space.component.css","webpack:///./src/app/member-space/member-space.component.html","webpack:///./src/app/member-space/member-space.component.ts","webpack:///./src/app/members-list/members-list.component.css","webpack:///./src/app/members-list/members-list.component.html","webpack:///./src/app/members-list/members-list.component.ts","webpack:///./src/app/models/user.ts","webpack:///./src/app/navigation/navigation.component.css","webpack:///./src/app/navigation/navigation.component.html","webpack:///./src/app/navigation/navigation.component.ts","webpack:///./src/app/new-password/new-password.component.css","webpack:///./src/app/new-password/new-password.component.html","webpack:///./src/app/new-password/new-password.component.ts","webpack:///./src/app/notifications/notifications.component.css","webpack:///./src/app/notifications/notifications.component.html","webpack:///./src/app/notifications/notifications.component.ts","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/services/chat.service.ts","webpack:///./src/app/services/pusher.service.ts","webpack:///./src/app/stats/stats.component.css","webpack:///./src/app/stats/stats.component.html","webpack:///./src/app/stats/stats.component.ts","webpack:///./src/app/token.service.ts","webpack:///./src/app/uploader/uploader.component.css","webpack:///./src/app/uploader/uploader.component.html","webpack:///./src/app/uploader/uploader.component.ts","webpack:///./src/app/user-settings/user-settings.component.css","webpack:///./src/app/user-settings/user-settings.component.html","webpack:///./src/app/user-settings/user-settings.component.ts","webpack:///./src/app/userdata/userdata.component.css","webpack:///./src/app/userdata/userdata.component.html","webpack:///./src/app/userdata/userdata.component.ts","webpack:///./src/app/websocket.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".container {\\n  margin-top: 5%;\\n}\\n\"","module.exports = \"\\n <app-header></app-header>\\n        \\n   <link href=\\\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css\\\" rel=\\\"stylesheet\\\" id=\\\"bootstrap-css\\\">\\n<script src=\\\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js\\\"></script>\\n<script src=\\\"//code.jquery.com/jquery-1.11.1.min.js\\\"></script>\\n<!------ Include the above in your HEAD tag ---------->\\n\\n<link href=\\\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\\\" rel=\\\"stylesheet\\\">\\n<div class=\\\"container\\\">\\n\\t<div class=\\\"row\\\">\\n      <div class=\\\"col-lg-3\\\">\\n        <div class=\\\"panel panel-info\\\">\\n          <div class=\\\"panel-heading\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-xs-6\\\">\\n                <i class=\\\"fa fa-address-card-o fa-5x\\\"></i>\\n              </div>\\n              <div class=\\\"col-xs-6 text-right\\\">\\n                <p class=\\\"announcement-heading\\\">Admin</p>\\n                <p class=\\\"announcement-text\\\">{{user.first_name}} {{user.last_name}}</p>\\n              </div>\\n            </div>\\n          </div>\\n         \\n        </div>\\n      </div>\\n  \\n      <div class=\\\"col-lg-3\\\">\\n        <div class=\\\"panel panel-danger\\\">\\n          <div class=\\\"panel-heading\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-xs-6\\\">\\n                <i class=\\\"fa fa-users fa-5x\\\"></i>\\n              </div>\\n              <div class=\\\"col-xs-6 text-right\\\">\\n                <p class=\\\"announcement-heading\\\">{{membersArray.length}}</p>\\n                <p class=\\\"announcement-text\\\">Membres</p>\\n              </div>\\n            </div>\\n          </div>\\n          <a href=\\\"#\\\">\\n            <div class=\\\"panel-footer announcement-bottom\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-xs-6\\\">\\n                  Expand\\n                </div>\\n                <div class=\\\"col-xs-6 text-right\\\">\\n                  <i class=\\\"fa fa-arrow-circle-right\\\"></i>\\n                </div>\\n              </div>\\n            </div>\\n          </a>\\n        </div>\\n      </div>\\n      <div class=\\\"col-lg-3\\\">\\n        <div class=\\\"panel panel-success\\\">\\n          <div class=\\\"panel-heading\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-xs-6\\\">\\n                <i class=\\\"fa fa-comments fa-5x\\\"></i>\\n              </div>\\n              <div class=\\\"col-xs-6 text-right\\\">\\n                <p class=\\\"announcement-heading\\\">{{commentsArray.length}}</p>\\n                <p class=\\\"announcement-text\\\"> Nombre de posts</p>\\n              </div>\\n            </div>\\n          </div>\\n          <a href=\\\"#\\\">\\n            <div class=\\\"panel-footer announcement-bottom\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-xs-6\\\">\\n                  Expand\\n                </div>\\n                <div class=\\\"col-xs-6 text-right\\\">\\n                  <i class=\\\"fa fa-arrow-circle-right\\\"></i>\\n                </div>\\n              </div>\\n            </div>\\n          </a>\\n        </div>\\n      </div>\\n    </div><!-- /.row -->\\n    </div>\\n\\n    <app-stats></app-stats>\"","import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointState, BreakpointObserver } from '@angular/cdk/layout';\nimport { AuthService } from '../auth.service';\nimport { CommentService } from '../comment.service';\nimport { Router } from '@angular/router';\nimport { User } from '../models/user';\n\n@Component({\n  selector: 'admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.css']\n})\nexport class AdminDashboardComponent {\n  commentsArray: Array<Comment>= [];\n  membersArray:Array<User>= [];\n  currentUser;\n  user: User= {\n    _id: '',\n    first_name: '',\n    last_name: '',\n    pseudo: '',\n    email: '',\n    admin: false,\n    online: false,\n    dateNaissance: new Date,\n    gender: '',\n    password: '',\n    friendsList: [\n      { status: \"\", friendId: \"\" }\n    ],\n    picture: ''\n\n  };;\n  constructor(private authService: AuthService, private commentService: CommentService, private  _router: Router) {\n    this.authService.getData().subscribe\n    (res => this.user=res.user)\nn    this.authService.onOnlineEvent().subscribe(\n      online=> console.log(online.pseudo)                                    \n    )\n  this.commentService.onBegin().subscribe(\n    online2=> console.log('ki est online', online2)\n  )\n    \n  }\n\n  ngOnInit() {\n  \n  \n\n\n    this.authService.getAllMembers().subscribe(\n      res => {\n        //console.log(res)\n        this.membersArray =res\n      }\n    \n    )\n\n  this.authService.getData().subscribe(\n    res => {\n      this.currentUser = res.user\n      console.log(this.currentUser)\n\n    }\n  )\n\n    this.commentService.getComments().subscribe(\n      res => {\n        this.commentsArray=res.comments;\n        console.log('stats',this.commentsArray);\n        \n      }\n      \n    )\n\n    this.commentService.isConnected().subscribe(\n      res => console.log('le rest', res)\n    )\n\n    \n      \n  }\n  \n\n\n \n}\n","import { Injectable } from '@angular/core';\nimport {CanActivate, Router} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { FindValueSubscriber } from 'rxjs/internal/operators/find';\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n \n  constructor(private _authService: AuthService, private _router: Router) {}\n  getData() {\n      this._authService.getData().subscribe(\n          res => {\n              console.log( \"console de chez adminguard \",res)\n          }\n      )\n  }\n\n\n  canActivate(): boolean {\n    if (this._authService.loggedIn() && this._authService.isAdmin) {\n      console.log(this._authService.isAdmin)\n      return true;\n    } else {\n      this._router.navigate(['/home']);\n      return false;\n    }\n\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {HomeComponent} from './home/home.component';\nimport {LoginComponent} from './login/login.component';\nimport {RegisterComponent} from './register/register.component';\nimport {FormsModule} from '@angular/forms';\nimport {UserdataComponent} from './userdata/userdata.component';\nimport {LostPasswordComponent} from './lost-password/lost-password.component';\nimport {AuthGuard} from './auth.guard';\nimport { UserSettingsComponent } from './user-settings/user-settings.component';\nimport { AdminDashboardComponent } from './admin-dashboard/admin-dashboard.component';\nimport { AdminGuard } from './admin.guard';\nimport { NewPasswordComponent } from './new-password/new-password.component';\nimport { MemberSpaceComponent } from './member-space/member-space.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { ChatWindowComponent } from './chat-window/chat-window.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/home',\n    pathMatch: 'full'\n  },\n  {path:'notFound', component: PageNotFoundComponent},\n  {path: 'home', component: HomeComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'lostpwd', component: LostPasswordComponent},\n  {path: 'passCode/:id', component: NewPasswordComponent},\n  {path:'member_space/:pseudo', component: MemberSpaceComponent,\n children:[\n  {path:'chat_window', component:ChatWindowComponent}\n\n ]},\n  {path: 'userdata', component: UserdataComponent,\n  canActivate : [AuthGuard]},\n  {path: 'user-settings', component: UserSettingsComponent,\n  canActivate : [AuthGuard]},\n  {path: 'admin', component: AdminDashboardComponent,\n   canActivate: [AdminGuard]}\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule, FormsModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n\\n\\n.wrapper{\\n    display: flex;\\n    flex-direction: column;            \\n    height: 100vh;\\n    overflow: hidden;\\n  }\\n  \\n  .header{\\n    flex: 0 0 auto;  \\n    background: #aaa;\\n  }\\n  \\n  .content{\\n    flex: 1 1 auto;     \\n    overflow-y: auto;     \\n  }\\n  \\n  *{\\n    box-sizing: border-box;\\n    margin: 0;\\n    padding: 0;\\n  }\\n  \\n  *:after,\\n  *:before{\\n    box-sizing: border-box;\\n  }\"","module.exports = \"<!-- <navigation></navigation> -->\\n<div class=\\\"wrapper\\\">\\n\\n<div class=\\\"header\\\">\\n    \\n</div>\\n<div class=\\\"content\\\">\\n    <router-outlet></router-outlet>\\n</div>\\n\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport {HomeComponent} from './home/home.component';\nimport {RegisterComponent} from './register/register.component';\nimport {LoginComponent} from './login/login.component';\nimport {UserdataComponent} from './userdata/userdata.component';\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DragulaModule } from 'ng2-dragula';\nimport { MatTableModule, MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatRadioModule, MatListModule, MatGridListModule, MatCardModule, MatMenuModule,MatFormFieldModule,MatInputModule, MatCheckboxModule } from '@angular/material';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatSelectModule} from '@angular/material/select';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { ImageUploadModule } from \"angular2-image-upload\";\nimport {MatDividerModule} from '@angular/material/divider';\nimport { LivechatWidgetModule } from '@livechat/angular-widget';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatDatepickerModule,MatNativeDateModule} from '@angular/material';\n\n\n\n// services\nimport {TokenService} from './token.service';\nimport {AuthService} from './auth.service';\nimport { LostPasswordComponent } from './lost-password/lost-password.component';\nimport {AuthGuard} from './auth.guard';\nimport { CommentsComponent } from './comments/comments.component';\nimport {CommentService} from './comment.service';\nimport { UploaderComponent } from './uploader/uploader.component';\nimport { UserSettingsComponent } from './user-settings/user-settings.component';\nimport { WebsocketService } from './websocket.service';\nimport { StatsComponent } from './stats/stats.component';\nimport { HeaderComponent } from './header/header.component';\nimport { MemberSearchComponent } from './member-search/member-search.component';\nimport { MemberActionService } from './member-action.service';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { MainComponent } from './main/main.component';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport { AdminDashboardComponent } from './admin-dashboard/admin-dashboard.component';\nimport { AdminGuard } from './admin.guard';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireStorageModule } from 'angularfire2/storage';\nimport { NewPasswordComponent } from './new-password/new-password.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport { FriendslistComponent } from './friendslist/friendslist.component';\nimport { MembersListComponent } from './members-list/members-list.component';\nimport { MemberSpaceComponent } from './member-space/member-space.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { ChatWindowComponent } from './chat-window/chat-window.component';\nimport { InvitationRequestComponent } from './invitation-request/invitation-request.component';\nimport { ChatService } from '../app/services/chat.service';\nimport { PusherService } from './services/pusher.service';\nimport { NotificationsComponent } from './notifications/notifications.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    RegisterComponent,\n    LoginComponent,\n    UserdataComponent,\n    LostPasswordComponent,\n    CommentsComponent,\n    UploaderComponent,\n    UserSettingsComponent,\n    StatsComponent,\n    HeaderComponent,\n    MemberSearchComponent,\n    MainComponent,\n    NavigationComponent,\n    AdminDashboardComponent,\n    NewPasswordComponent,\n    FriendslistComponent,\n    MembersListComponent,\n    MemberSpaceComponent,\n    PageNotFoundComponent,\n    ChatWindowComponent,\n    InvitationRequestComponent,\n    NotificationsComponent,\n   \n  ],\n\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    DragulaModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatTabsModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    BrowserAnimationsModule,\n    MatExpansionModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    MatDividerModule,\n    MatButtonToggleModule,\n    LivechatWidgetModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    ImageUploadModule.forRoot(),\n    \n\n    AngularFireModule.initializeApp({\n      apiKey: \"AIzaSyAlSqMwKKhmxwcaV2yV0JakW1Z3FC-8d3Q\",\n    authDomain: \"reseau-social-c1b9a.firebaseapp.com\",\n    databaseURL: \"https://reseau-social-c1b9a.firebaseio.com\",\n    projectId: \"reseau-social-c1b9a\",\n    storageBucket: \"reseau-social-c1b9a.appspot.com\",\n    messagingSenderId: \"217716745845\"\n    }),\n    AngularFireStorageModule\n    \n  ],\n  providers: [AuthService,AdminGuard, AuthGuard,WebsocketService,ChatService,PusherService, CommentService,MemberActionService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenService,\n      multi: true\n    }],\n  bootstrap: [AppComponent],\n  entryComponents: [ChatWindowComponent]\n \n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {CanActivate, Router} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private _authService: AuthService, private _router: Router) {}\n  canActivate(): boolean {\n    if (this._authService.loggedIn()) {\n      return true;\n    } else {\n      this._router.navigate(['/login']);\n      return false;\n    }\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport {Config} from './config'\nimport { Observable } from 'rxjs';\nimport * as io from 'socket.io-client';\n\n\n\n\n@Injectable()\nexport class AuthService {\n  user = {\n    _id:'',\n    email : '',\n    pseudo:'',\n    password : '',\n    admin:false,\n    online:false,\n  };\n\n  private socket = io(Config.SOCKET_HOST);\n  _id:String\n  url = Config.SOCKET_HOST || \"http://localhost\";\n  private _registerURL = this.url + '/api/register';\n  private _checkPseudoURL = this.url + '/api/checkPseudo';\n  private _checkEmailURL = this.url + '/api/checkEmail';\n  private _loginURL = this.url + '/api/login';\n  private _userdataURL = this.url + '/api/userdata';\n  private _lostPassword = this.url + '/api/lostpwd';\n  private _home = this.url + '/api/';\n  private _admin = this.url + '/api/admin';\n  private _updateUser= this.url+'/api/update';\n  private _updateUserSatus= this.url+'/api/updatestatut';\n  private _getAllMembers= this.url+'/api/getAllMembers'\n  private _memberUrl = this.url+'/api/member_space'\n  connected: number=0;\n   \n  constructor(private http: HttpClient, private _router: Router) {}\n\n  onOnlineEvent() {\n    let observable = new Observable<any>\n    (observer => {\n      this.socket.on('iamOnline:res', (data) => {\n        observer.next(data);\n      });\n      return () => {this.socket.disconnect();};\n    });\n    return observable;\n  }\n\n  onOfflineEvent() {\n    let observable = new Observable<any>\n    (observer => {\n      this.socket.on('iamOffline:res', (data) => {\n        observer.next(data);\n      });\n      return () => {this.socket.disconnect();};\n    });\n    return observable;\n  }\n\n  checkPseudo(user){\n    return this.http.post<any>(this._checkPseudoURL, user);\n  }\n                                                                                                                                                        \n  checkEmail(user){\n    return this.http.post<any>(this._checkEmailURL, user);\n\n  }\n  registerUser(user) {\n    return this.http.post<any>(this._registerURL, user);\n  }\n  updateUserStatus(user) {\n    return this.http.put<any>(this._updateUserSatus, user);\n  }\n  updateUser(user) {\n    return this.http.put<any>(this._updateUser, user);\n  }\n  loginUser(user) {\n    return this.http.post<any>(this._loginURL, user);\n  }\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n\n  iamOnline(user){\n    this.socket.emit('iamOnline', user)\n    //this.postComment(data).subscribe();\n  }\n\n  iamOffline(user){\n    this.socket.emit('iamOffline', user)\n  }\n\n  onLeave(user) {\n    user.online=false;\n    this.updateUser(user);\n    }\n\n  logoutUser() {\n    \n    localStorage.removeItem('token');\n    //this._router.navigate(['/home']);\n  }\n\n  loggedIn() {\n    \n    return !!localStorage.getItem('token');\n  }\n \n\n\n  lostPassword(_email) {\n    return this.http.post<any>(this._lostPassword, _email);\n  }\n\n  isAdmin(){\n    return true;\n  }\n \n  getData() {\n    return this.http.get<any>(this._userdataURL);\n  }\n\n  admin() {\n    return this.http.get<any>(this._admin);\n  }\n  home() {\n    return this.http.get<any>(this._home);\n  }\n  getAllMembers(){\n    return this.http.get<any>(this._getAllMembers);\n  }\n  \n \n    \n  memberSpace(pseudo){\n   \n    return this.http.get<any>(this._memberUrl+'/'+pseudo, {params:pseudo})\n  }\n\n}\n","module.exports = \"\\n\\nbody{\\n  height:400px;\\n  position: fixed;\\n  bottom: 0;\\n}\\n.col-md-2, .col-md-10{\\n  padding:0;\\n}\\n.panel{\\n  margin-bottom: 0px;\\n}\\n.chat-window{\\n  bottom:0;\\n  position:fixed;\\n  float:right;\\n  margin-left:10px;\\n}\\n.chat-window > div > .panel{\\n  border-radius: 5px 5px 0 0;\\n}\\n.icon_minim{\\n  padding:2px 10px;\\n}\\n.msg_container_base{\\nbackground: #e5e5e5;\\nmargin: 0;\\npadding: 0 10px 10px;\\nmax-height:300px;\\noverflow-x:hidden;\\n}\\n.top-bar {\\nbackground: #666;\\ncolor: white;\\npadding: 10px;\\nposition: relative;\\noverflow: hidden;\\n}\\n.msg_receive{\\n  padding-left:0;\\n  margin-left:0;\\n}\\n.msg_sent{\\n  padding-bottom:20px !important;\\n  margin-right:0;\\n}\\n.messages {\\nbackground: white;\\npadding: 10px;\\nborder-radius: 2px;\\nbox-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\\nmax-width:100%;\\n}\\n.messages > p {\\n  font-size: 13px;\\n  margin: 0 0 0.2rem 0;\\n}\\n.messages > time {\\n  font-size: 11px;\\n  color: #ccc;\\n}\\n.msg_container {\\n  padding: 10px;\\n  overflow: hidden;\\n  display: flex;\\n}\\nimg {\\n  display: block;\\n  \\n}\\n.avatar {\\n  position: relative;\\n}\\n.base_receive > .avatar:after {\\n  content: \\\"\\\";\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  width: 0;\\n  height: 0;\\n  border: 5px solid #FFF;\\n  border-left-color: rgba(0, 0, 0, 0);\\n  border-bottom-color: rgba(0, 0, 0, 0);\\n}\\n.base_sent {\\njustify-content: flex-end;\\nalign-items: flex-end;\\n}\\n.base_sent > .avatar:after {\\n  content: \\\"\\\";\\n  position: absolute;\\n  bottom: 0;\\n  left: 0;\\n  width: 0;\\n  height: 0;\\n  border: 5px solid white;\\n  border-right-color: transparent;\\n  border-top-color: transparent;\\n  box-shadow: 1px 1px 2px rgba(black, 0.2); \\n}\\n.msg_sent > time{\\n  float: right;\\n}\\n.msg_container_base::-webkit-scrollbar-track\\n{\\n  -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);\\n  background-color: #F5F5F5;\\n}\\n.msg_container_base::-webkit-scrollbar\\n{\\n  width: 12px;\\n  background-color: #F5F5F5;\\n}\\n.msg_container_base::-webkit-scrollbar-thumb\\n{\\n  -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);\\n  background-color: #555;\\n}\\n.btn-group.dropup{\\n  position:fixed;\\n  left:0px;\\n  bottom:0;\\n}\"","module.exports = \"<link href=\\\"//netdna.bootstrapcdn.com/bootstrap/3.1.0/css/bootstrap.min.css\\\" rel=\\\"stylesheet\\\" id=\\\"bootstrap-css\\\">\\n<script src=\\\"//netdna.bootstrapcdn.com/bootstrap/3.1.0/js/bootstrap.min.js\\\"></script>\\n<script src=\\\"//code.jquery.com/jquery-1.11.1.min.js\\\"></script>\\n<!------ Include the above in your HEAD tag ---------->\\n\\n<!-- <div class=\\\"chatbox\\\">\\n<form #chat=\\\"ngForm\\\">\\n\\n    <div class=\\\"message\\\" *ngFor=\\\"let message of commentsArray \\\">\\n\\n   \\n   <strong> <img src=\\\"{{message.authorPicture}}\\\" class=\\\"rounded\\\" width=\\\"48px\\\" alt=\\\"\\\"> {{message.author}}:</strong>\\n    <br>\\n    {{message.text}}\\n\\n\\n    </div>\\n\\n\\n\\n    <input type=\\\"text\\\" name=\\\"message\\\" [(ngModel)]=\\\"message.text\\\" required >\\n    <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!chat.form.valid \\\"  type=\\\"submit\\\" (click)=\\\"sent()\\\">Envoyer</button>\\n\\n</form>\\n\\n</div> -->\\n\\n<div class=\\\"container\\\">\\n    <div class=\\\"row chat-window \\\" id=\\\"chat_window_1\\\" style=\\\"margin-left:10px;\\\">\\n        <div class=\\\"col-xs-12 col-md-12\\\">\\n        \\t<div class=\\\"panel panel-default\\\">\\n                <div class=\\\"panel-heading top-bar\\\">\\n                    <div class=\\\"col-md-12 col-xs-12\\\">\\n                        <h3 class=\\\"panel-title\\\"><span class=\\\"glyphicon glyphicon-comment\\\"></span> Chat</h3>\\n                    </div>\\n                    <div class=\\\"col-md-4 col-xs-4\\\" style=\\\"text-align: right;\\\" >\\n                        <a (click)=\\\"closeChat()\\\" ><span class=\\\"glyphicon glyphicon-remove icon_close\\\" data-id=\\\"chat_window_1\\\"></span></a>\\n                    </div>\\n                </div>\\n                <form #chat=\\\"ngForm\\\">\\n                    <div class=\\\"message\\\" *ngFor=\\\"let message of commentsArray \\\" >\\n                    <img src=\\\"{{message.authorPicture}}\\\" class=\\\"rounded\\\" width=\\\"48px\\\" alt=\\\"\\\"> {{message.author}}:\\n                    \\n                    {{message.text}}\\n                \\n                    </div>\\n                \\n            \\n                \\n                    <input type=\\\"text\\\" name=\\\"message\\\" [(ngModel)]=\\\"message.text\\\" required >\\n                    <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!chat.form.valid \\\"  type=\\\"submit\\\" (click)=\\\"sent()\\\">Envoyer</button>\\n                \\n                </form>\\n                \\n                </div>\\n                \\n    \\t\\t</div>\\n        </div>\\n    \\n    \\n    <div class=\\\"btn-group dropup\\\">\\n<!--         <button type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n            <span class=\\\"glyphicon glyphicon-cog\\\"></span>\\n            <span class=\\\"sr-only\\\">Toggle Dropdown</span>\\n        </button> -->\\n<!--         <ul class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\n            <li><a href=\\\"#\\\" id=\\\"new_chat\\\"><span class=\\\"glyphicon glyphicon-plus\\\"></span> Novo</a></li>\\n            <li><a href=\\\"#\\\"><span class=\\\"glyphicon glyphicon-list\\\"></span> Ver outras</a></li>\\n            <li><a href=\\\"#\\\"><span class=\\\"glyphicon glyphicon-remove\\\"></span> Fechar Tudo</a></li>\\n            <li class=\\\"divider\\\"></li>\\n            <li><a href=\\\"#\\\"><span class=\\\"glyphicon glyphicon-eye-close\\\"></span> Invisivel</a></li>\\n        </ul> -->\\n    </div>\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n<script>\\n\\n    $(document).on('click', '.panel-heading span.icon_minim', function (e) {\\n    var $this = $(this);\\n    if (!$this.hasClass('panel-collapsed')) {\\n        $this.parents('.panel').find('.panel-body').slideUp();\\n        $this.addClass('panel-collapsed');\\n        $this.removeClass('glyphicon-minus').addClass('glyphicon-plus');\\n    } else {\\n        $this.parents('.panel').find('.panel-body').slideDown();\\n        $this.removeClass('panel-collapsed');\\n        $this.removeClass('glyphicon-plus').addClass('glyphicon-minus');\\n    }\\n});\\n$(document).on('focus', '.panel-footer input.chat_input', function (e) {\\n    var $this = $(this);\\n    if ($('#minim_chat_window').hasClass('panel-collapsed')) {\\n        $this.parents('.panel').find('.panel-body').slideDown();\\n        $('#minim_chat_window').removeClass('panel-collapsed');\\n        $('#minim_chat_window').removeClass('glyphicon-plus').addClass('glyphicon-minus');\\n    }\\n});\\n$(document).on('click', '#new_chat', function (e) {\\n    var size = $( \\\".chat-window:last-child\\\" ).css(\\\"margin-left\\\");\\n     size_total = parseInt(size) + 400;\\n    alert(size_total);\\n    var clone = $( \\\"#chat_window_1\\\" ).clone().appendTo( \\\".container\\\" );\\n    clone.css(\\\"margin-left\\\", size_total);\\n});\\n$(document).on('click', '.icon_close', function (e) {\\n    //$(this).parent().parent().parent().parent().remove();\\n    $( \\\"#chat_window_1\\\" ).remove();\\n});\\n</script>\"","import { Component, OnInit, Inject, Input } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\nimport { FormGroup } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { User } from '../models/user';\nimport { Comment } from '../models/comment';\nimport { ChatService } from '../chat/chat.service';\nimport { Message } from '../models/message';\nimport { Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-chat-window',\n  templateUrl: './chat-window.component.html',\n  styleUrls: ['./chat-window.component.css']\n})\nexport class ChatWindowComponent implements OnInit {\n\n  user: User;\nmessage: Message ={\n  id: '',\n   sentAt:new Date,\n   author: '',\n   text: '',\n   authorPicture:''\n} ;\ncommentsArray: Array<Comment>= [];\n\n\nconstructor(public authService:AuthService , public chatService: ChatService , private router: Router) { \n  this.authService.getData().subscribe(\n    res=> {\n      this.user=res.user;\n      \n    }\n  )\n\n\n    this.chatService.messageSent().subscribe(\n      res => this.commentsArray.push(res)\n    )\n  }\n\n  ngOnInit() {\n         \n  }\n\n  sent(){\n    this.message.id=this.user._id\n    this.message.author=this.user.pseudo\n    this.message.authorPicture= this.user.picture;\n    this.chatService.sendMessage(this.message);\n    this.message.text='';\n\n  }\n\n  closeChat(){\n    this.router.navigate(['/member_space', this.user.pseudo])\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as io from 'socket.io-client';\nimport { Observable, Subject} from 'rxjs';\nimport { Config } from '../../app/config'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n  private socket = io(Config.SOCKET_HOST);\n\n  constructor() { }\n\n  //Chat message sent observable \n  messageSent(){\n    let observable = new Observable<any>\n    (observer=> {\n      this.socket.on('message:sent', (data) => {\n        observer.next(data);\n      });\n      return () => {this.socket.disconnect();};\n    })\n    return observable;\n  }\n\n  messageSentToRoom(){\n    let observable = new Observable<any>\n    (observer=> {\n      this.socket.on('message:sent', (data) => {\n        observer.next(data);\n      });\n      return () => {this.socket.disconnect();};\n    })\n    return observable;\n  }\n\n\n\n  onInvitationChatRequest(){\n    let observable = new Observable<any>\n    (observer=> {\n      this.socket.on('chat:request', (data) => {\n        observer.next(data);\n      });\n      return () => {this.socket.disconnect();};\n    })\n    return observable;\n  }\n    \n  sendMessage(data){\n    this.socket.emit('sent', data);\n  }\n\n  sendChatInvitation(data){\n  this.socket.emit('chat:invitationRequest', data)\n\n  }\n  sentRoom(data, room){\n    \n    }\n    \n}\n  ","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport * as io from 'socket.io-client';\nimport { Observable, Subject} from 'rxjs';\nimport { Config } from './config'\nimport { environment } from '../environments/environment';\nimport { User } from './models/user';\n\n@Injectable()\nexport class CommentService  {\n  url = Config.SOCKET_HOST || \"http://localhost\";\n  private _postCommentUrl = this.url+'/api/post_comment';\n  //For each member's space\n  private _getCommentPostedUrl =this.url+'/api/get_member_comments';\n  //Admin & stats\n  private _getAllUserCommentsUrl = this.url+'/api/comments';\n  private _chatUrl = this.url+'/api/chat';\n  private socket = io(Config.SOCKET_HOST);\n  message:any;\n  constructor(private http: HttpClient, private _router: Router) {}\n  \n  onBegin() {\n    let observable = new Observable<{message:String}>\n    (observer => {\n      this.socket.on('user join', (data) => {\n        observer.next(data);\n      }\n        \n    );\n\n      return () => {this.socket.disconnect();};\n    });\n    return observable;\n  }\n\n\n\n  onPosted() {\n    let observable = new Observable<any>\n    (observer => {\n      this.socket.on('message', (data) => {\n        observer.next(data);\n      });\n      return () => {this.socket.disconnect();};\n    });\n    return observable;\n  }\n\n isConnected(){\n  let observable = new Observable<any>\n  (observer => {\n    this.socket.on('isconnected', (data) => {\n      observer.next(data);\n    });\n    return () => {this.socket.disconnect();};\n  });\n  return observable;\n }\n\n\n\n\n\n  onLogin(data) {\n    this.socket.emit('login', data)\n  }\n\ngetMemberComments (pseudo){\n  return this.http.get<any>(this._getCommentPostedUrl+'/'+pseudo ,{params:pseudo})\n}\n \npostMessage(data) {\n  this.socket.emit('posted', data)\n  this.postComment(data).subscribe();\n}\n\ngetAllMember() {\n  let observable= new Observable<any>\n  (observer => {\n    this.socket.on('allmember',(data)=> {\n      observer.next(data);\n    })\n    return () => {this.socket.disconnect();};\n  })\n  return observable;\n}\n\n\npostComment(comment) {\n  return this.http.post<any>(this._postCommentUrl, comment);\n} \n\ngetComments() {\n  return this.http.get<any>(this._getAllUserCommentsUrl);\n}\n\n//Chat service\n\n\n}\n\n\n","module.exports = \"\\n.example-form {\\n    min-width: 150px;\\n    max-width: 500px;\\n    width: 100%;\\n  }\\n  \\n  .example-full-width {\\n    width: 100%;\\n  }\"","module.exports = \"<mat-card class=\\\"example-card\\\">\\n    <article >\\n      <form class=\\\"example-form\\\" #commentF=\\\"ngForm\\\" (submit)=\\\"posted();commentF.reset()\\\" >\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"titre du message\\\" name=\\\"title\\\" id=\\\"titre\\\" [(ngModel)]=\\\"comment.title\\\" required >\\n    </mat-form-field>\\n     <br>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <textarea matInput placeholder=\\\"Poster un commentaire......\\\" name=\\\"comment\\\" [(ngModel)]=\\\"comment.content\\\"></textarea>\\n    </mat-form-field>\\n     <br>\\n         \\n    <button type=\\\"submit\\\" mat-fab color=\\\"accent\\\" [disabled]=\\\"!commentF.form.valid\\\">Poster\\n     \\n    </button>\\n\\n</form>\\n      \\n  </article>\\n  </mat-card>\"","import { Component, OnInit , EventEmitter,  Output, Input } from '@angular/core';\nimport {CommentService} from '../comment.service';\nimport {Router} from '@angular/router';\nimport { Comment } from '../models/comment';\nimport {AuthService} from '../auth.service';\nimport {User} from \"../models/user\";\n\n\n@Component({\n  selector: 'app-comments',\n  templateUrl: './comments.component.html',\n  styleUrls: ['./comments.component.css']\n})\nexport class CommentsComponent implements OnInit {\n  commentsArray: Array<Comment>= [];\n  comment:Comment ={\n    title: '',\n author: '',\n content: '',\n date:null,\n authorId: '',\n authorPicture:'',\n explicit: false\n\n  }\n  constructor(private auth: AuthService, private  commentService: CommentService) {\n   // this.commentService.onBegin().subscribe();\n    this.commentService.onPosted()\n    .subscribe(data => this.commentsArray.splice(0,0,data)\n    );\n  }\n\n  ngOnInit() {\n    this.auth.getData().subscribe(\n      res =>{\n        this.comment.authorId= res.user._id;\n        this.comment.author = res.user.first_name + ' ' +res.user.last_name;\n        this.comment.authorPicture = res.user.picture;\n        console.log(this.comment )\n      }\n    )\n    this.commentService.getComments().subscribe(\n      res => {\n        this.commentsArray=res.comments;\n        console.log('Les commentaires en base',this.commentsArray);\n        \n      }\n      \n    )\n   \n}\n\nposted() {\n  this.comment.date=new Date();\n  this.commentService.postMessage(this.comment)\n}\n\n\n\n}\n","export class Config {\n\n  URL = \"http://localhost:5000\"\n  public static  get SOCKET_HOST(): string {\n    return \"https://dry-fortress-71234.herokuapp.com\" \n  }\n\n\n/*   URL = \"localhost\"\n  public static  get SOCKET_HOST(): string {\n    return \"http://localhost:5000\" || 'https://dry-fortress-71234.herokuapp.com';\n  } */\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  friendslist works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-friendslist',\n  templateUrl: './friendslist.component.html',\n  styleUrls: ['./friendslist.component.css']\n})\nexport class FriendslistComponent implements OnInit {\n\n  constructor(private authService:AuthService) { }\n\n  ngOnInit() {\n    \n  }\n\n}\n","module.exports = \"\\n.example-icon {\\n  padding: 0 14px;\\n}\\n\\n.example-spacer {\\n  flex: 1 1 auto;\\n  width: 40px;\\n}\\n\\na{\\n  color: white;\\n}\\n\\n.infos {\\n  display:flex;\\n  flex-flow: row nowrap;\\n  justify-content:space-between;\\n  align-items: center;\\n\\n\\n}\\n\\nimg {\\n  width: 46px;\\n  border-radius: 50%;\\n  padding-right: 10px;\\n}\"","module.exports = \"\\n<mat-toolbar color=\\\"primary\\\">\\n   <mat-toolbar-row>\\n        <span>Réseau Social</span>\\n        <span class=\\\"example-spacer\\\"></span>\\n        \\n             <a routerLink=\\\"/\\\" routerLinkActive=\\\"active\\\"><i class=\\\"material-icons\\\" matTooltip=\\\"Page d'accueil\\\">\\n            home\\n            </i></a> \\n        <span class=\\\"example-spacer\\\"></span>\\n        <div class=\\\"infos\\\">\\n            <div>\\n                <a routerLink=\\\"/member_space/{{user.pseudo}}\\\" matTooltip=\\\"Mon espace \\\"><img src=\\\"{{user.picture}}\\\"  alt=\\\"\\\"></a>            \\n            </div>\\n            <div>\\n                {{user.first_name}} {{user.last_name}} \\n            </div>\\n           </div>\\n           <span class=\\\"example-spacer\\\"></span>\\n           <span><a *ngIf=\\\"user.admin\\\" routerLink=\\\"/admin\\\" routerLinkActive=\\\"active\\\">  <i class=\\\"material-icons\\\" matTooltip=\\\"Admin\\\">\\n            supervised_user_circle\\n      </i></a></span>\\n      <span class=\\\"example-spacer\\\"></span>\\n      <span><a *ngIf=\\\"!getUserState()\\\"  routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\"><i class=\\\"user outline icon\\\"></i></a></span>\\n      <span class=\\\"example-spacer\\\"></span>\\n      <span><a *ngIf=\\\"getUserState()\\\" routerLink=\\\"/user-settings\\\" routerLinkActive=\\\"active\\\">  <i class=\\\"material-icons\\\" matTooltip=\\\"Paramettres du compte\\\">\\n            settings\\n            </i></a></span>\\n            <span class=\\\"example-spacer\\\"></span>\\n            <span class=\\\"example-spacer\\\"></span>\\n\\n     \\n\\n      <span class=\\\"example-spacer\\\"></span>\\n      <!-- <span><a *ngIf=\\\"getUserState()\\\"  routerLink=\\\"/userdata\\\" routerLinkActive=\\\"active\\\"><i class=\\\"fas fa-user-circle\\\"></i></a></span> -->\\n      \\n      <a *ngIf=\\\"!getUserState()\\\" class=\\\"item\\\" routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\"><i class=\\\"material-icons\\\" matTooltip=\\\"Membre - Se connecter\\\">\\n            account_circle\\n            </i></a>\\n      <span><a *ngIf=\\\"getUserState()\\\"  (click)=\\\"logoutUser()\\\" href=\\\"/home\\\"><i class=\\\"material-icons\\\"  matTooltip=\\\"Se deconnecter\\\"\\n        >\\n            input\\n            </i></a></span>\\n      \\n    </mat-toolbar-row>\\n  </mat-toolbar>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from \"../auth.service\";\nimport { CommentService } from '../comment.service';\nimport { User } from '../models/user';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n userid;\n  isAuth = false;\n  title = 'app';\n  user = {\n    first_name :'',\n    last_name:'',\n    pseudo:'',\n    email:'',\n    picture:'',\n    admin:false,\n    online:false,\n\n  };\n\n  membersOnlines=[];\n  constructor( private authService: AuthService) {\n\n    this.getUserState()\n    \n    console.log(this.isAuth)\n  if(this.isAuth){\n    \n    this.authService.getData()\n    .subscribe(\n      res => {//console.log('////',res)\n      this.user = res.user;\n      this.userid=res.user._id\n      this.user.online=true\n      this.authService.iamOnline(this.user)\n      this.authService.updateUserStatus(this.user)\n\n      this.authService.onOnlineEvent().subscribe\n      (online  => {\n        this.membersOnlines.push(online)\n      }\n    )\n    \n      })\n  }\n  \n  this.authService.onOfflineEvent().subscribe(\n    offline=> console.log('offline: => ',offline)\n  )\n  \n  }\n \n  ngOnInit() {\n\n    this.getUserState()\n    //console.log(this.isAuth)\n  if(this.isAuth){\n    this.authService.getData()\n    .subscribe(\n      res => {//console.log('////',res)\n      this.user = res.user;\n      this.userid=res.user._id\n      })\n  }\n    \n  }\n\n\n\n  getUserState() {\n    this.isAuth = !!this.authService.getToken();\n    return this.isAuth;\n  }\n\n  logoutUser() {\n    this.authService.logoutUser();\n    this.authService.iamOffline(this.user)\n    this.isAuth =false;\n    this.user.online=false\n    this.authService.updateUserStatus(this.user)\n    \n    \n    }\n\n \n\n}\n","module.exports = \".card-image > img  {\\n    width: 128px;\\n  height: 128px;\\n}\\n\\n#stats{\\n  padding-top: 30px;\\n  position: fixed;\\n  max-width: 400px;\\n left: 70%;\\n}\\n\\n.example-card {\\n  max-width: 400px;\\n  height: 100%;\\n  margin-bottom: 40px;\\n  padding-bottom: 40px;\\n  background-color: ivory\\n}\\n\\n.example-header-image {\\n\\n  background-size: cover;\\n}\\n\\n.mat-card-actions {\\n  margin-bottom: 30px;\\n}\\n\\n.container {\\n  padding-left: 25%\\n}\\n\\nspan {\\n  padding: 25px;\\n  \\n}\\n\\n.example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\nmat-toolbar{\\n  position: fixed;\\n  height: 30px;\\n}\\n\\n.card {\\n  position: absolute;\\n  margin-left: 60%;\\n  top:15%\\n}\\n\\n.test{\\n  padding: 10px\\n}\"","module.exports = \"\\n<app-header></app-header>\\n\\n\\n<div class=\\\"container\\\">\\n                    \\n\\n\\n <div class=\\\"col s6\\\" *ngIf=!isMember>\\n   <p>Visiteurs : <a routerLink=\\\"/login\\\">Creer un compte</a>  pour poster des messages et discuter avec vos amis</p>\\n </div>\\n</div>\\n\\n<link href=\\\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css\\\" rel=\\\"stylesheet\\\" id=\\\"bootstrap-css\\\">\\n<script src=\\\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js\\\"></script>\\n<script src=\\\"//code.jquery.com/jquery-1.11.1.min.js\\\"></script>\\n<!------ Include the above in your HEAD tag ---------->\\n\\n<link href=\\\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\\\" rel=\\\"stylesheet\\\">\\n<div class=\\\"container\\\">\\n\\t<div class=\\\"row\\\">\\n\\n      <div class=\\\"col-lg-3\\\">\\n        <div class=\\\"panel panel-danger\\\">\\n          <div class=\\\"panel-heading\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-xs-6\\\">\\n                <i class=\\\"fa fa-users fa-5x\\\"></i>\\n              </div>\\n              <div class=\\\"col-xs-6 text-right\\\">\\n                <p class=\\\"announcement-heading\\\">{{membersArray.length}}</p>\\n                <p class=\\\"announcement-text\\\">Membres</p>\\n              </div>\\n            </div>\\n          </div>\\n      \\n        </div>\\n      </div>\\n      <div class=\\\"col-lg-3\\\">\\n        <div class=\\\"panel panel-success\\\">\\n          <div class=\\\"panel-heading\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-xs-6\\\">\\n                <i class=\\\"fa fa-comments fa-5x\\\"></i>\\n              </div>\\n              <div class=\\\"col-xs-6 text-right\\\">\\n                <p class=\\\"announcement-heading\\\">{{commentsArray.length}}</p>\\n                <p class=\\\"announcement-text\\\"> Nombre de posts</p>\\n              </div>\\n            </div>\\n          </div>\\n          \\n        </div>\\n      </div>\\n    </div><!-- /.row -->\\n    </div>\\n\\n<!-- <div class=\\\"container\\\">\\n  \\n\\n  <mat-card class=\\\"example-card\\\" *ngFor=\\\"let comment of commentsArray\\\">\\n    <mat-card-header>\\n      <div mat-card-avatar class=\\\"example-header-image\\\">\\n        <img src=\\\"{{comment.authorPicture}}\\\" style=\\\"width: 46px;\\\" alt=\\\"\\\">\\n      </div>\\n      <mat-card-title>{{comment.author }} </mat-card-title>\\n      <mat-card-subtitle> Posté le  {{ comment.date| date:'dd-MM-yyyy à HH:mm' }}</mat-card-subtitle>\\n    </mat-card-header>\\n    <h4> {{comment.title}}</h4>\\n   \\n    <mat-card-content>\\n      <p>\\n        {{comment.content}}\\n      </p>\\n    </mat-card-content>\\n   \\n  </mat-card>\\n</div> -->\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { CommentService } from '../comment.service';\nimport { Comment } from '../models/comment';\nimport { User } from '../models/user';\n\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n \n  isMember = false;\n  message :String;\n  currentDate= new Date();\n   comment:Comment ={\n    title: '',\n author: '',\n content: '',\n date:null,\n authorId: '',\n authorPicture:'',\n explicit: false\n\n  }\n  userPicture:String;\ncommentsArray: Array<Comment>= [];\n  membersArray:Array<User>= [];\n\n\n  constructor(private authService: AuthService, private  commentService: CommentService) {\n    this.commentService.onBegin()\n    .subscribe(\n      res => console.log('???',res)\n    );\n     this.commentService.onPosted()\n    .subscribe(data => {\n      this.commentsArray.splice(0,0,data)\n      console.log(\"Apres ajout\",this.commentsArray)\n    }\n    ); \n  }\n\n  ngOnInit() {\n\n    this.authService.getAllMembers().subscribe(\n      res => {\n        //console.log(res)\n        this.membersArray =res\n      }\n    )\n   if (this.authService.loggedIn()) {\n\n      this.isMember = true;\n      //this.userdata()\n      this.authService.getData().subscribe(\n        res =>{\n          this.comment.authorId= res.user._id;\n          this.comment.author = res.user.first_name + ' ' +res.user.last_name;\n          this.comment.authorPicture = res.user.picture;\n          //console.log(this.comment )\n        }\n      )\n    }\n    \n    this.commentService.getComments().subscribe(\n      res => {\n        this.commentsArray=res.comments;\n        //console.log('Les commentaires en base',this.commentsArray);\n        \n      }\n      \n    )\n  \n}\n\nposted() {\n  this.comment.date=new Date();\n  this.commentService.postMessage(this.comment)\n  \n}\n\ngetMessages(){\n  this.commentService.onBegin()\n    .subscribe(data => {\n      this.message;\n      console.log(data)\n    }\n    );\n} \n\n\n\n\n}\n\n","module.exports = \"\"","module.exports = \"<p>\\n  invitation-request works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-invitation-request',\n  templateUrl: './invitation-request.component.html',\n  styleUrls: ['./invitation-request.component.css']\n})\nexport class InvitationRequestComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n.mat-tab-group {\\n  \\n  margin-top: 15%;\\n  padding-bottom: 20px;\\n  color: black;\\n  height: 100%;\\n} \\n\\nform{\\n\\n  padding-bottom: 20px;\\n  align-items: center;\\n} \\n\\n.container {\\n \\n  width: 100%;\\n  display: flex;\\n  flex-flow: row wrap;\\n\\n} \\n\\n.login{\\n  width: 100%;\\n  display: flex;\\n  flex-flow: column wrap;\\n\\n}\"","module.exports = \"\\n\\n<!-- <app-header></app-header> -->\\n<div class=\\\"container\\\">\\n\\n\\n\\n\\n\\n<mat-tab-group>\\n\\n\\n  <div>\\n      <img src=\\\"../../assets/images/logoOcto.png\\\" alt=\\\"\\\" style=\\\"width: 150px\\\">\\n\\n  </div>\\n\\n    <mat-tab label=\\\"Connexion\\\"> \\n        <form #loginF=\\\"ngForm\\\"  >\\n        <div class=\\\"example-container\\\">\\n            <mat-form-field>\\n                <input matInput placeholder=\\\"pseudo\\\" [(ngModel)]=\\\"userData.pseudo\\\" required name=\\\"pseudo\\\">\\n                \\n              </mat-form-field>\\n <!--            <mat-form-field>\\n              <input matInput placeholder=\\\"Email\\\" [(ngModel)]=\\\"userData.email\\\" name=\\\"email\\\"  [formControl]=\\\"email\\\" \\n              pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\"\\n              >\\n              <mat-error *ngIf=\\\"email.invalid\\\">{{getErrorMessage()}}</mat-error>\\n            </mat-form-field> -->\\n            <br>\\n            <mat-form-field>\\n                <input matInput placeholder=\\\"Mot de passe\\\" [(ngModel)]=\\\"userData.password\\\" required name=\\\"password\\\"  [type]=\\\"hide ? 'password' : 'text'\\\">\\n                <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n              </mat-form-field>\\n              <br>\\n              <button  mat-button color=\\\"primary\\\" [disabled]=\\\"!loginF.form.valid \\\" (click)=\\\"onLogin();loginF.reset()\\\">Se connecter</button>\\n              <mat-error>{{errorMessage}}</mat-error> \\n              <button mat-button color=\\\"primary\\\" routerLink=\\\"/lostpwd\\\" >Informations de compte oubliées ? </button>\\n          </div>\\n        </form>\\n    </mat-tab>\\n    <mat-tab label=\\\"Inscription\\\"> \\n      <app-register></app-register>\\n    </mat-tab>\\n    \\n  </mat-tab-group>\\n\\n  <div>\\n\\n    <img src=\\\"../../assets/images/backgroundLogin.png\\\" alt=\\\"\\\">\\n  </div>\\n\\n</div>\\n\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { AuthService} from '../auth.service';\nimport { Router } from '@angular/router';\nimport { FormControl, Validators } from '@angular/forms';\nimport { CommentService } from '../comment.service';\nimport { User } from '../models/user';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n/*   userData = {\n    _id:'',\n    email:'',\n    pseudo:'',\n    password:'',\n    admin:false,\n    online:false,\n  }; */\n\n\n  userData: User = {\n    _id: '',\n    first_name: '',\n    last_name: '',\n    pseudo: '',\n    email: '',\n    admin: false,\n    online: false,\n    dateNaissance: new Date,\n    gender: '',\n    password: '',\n    friendsList: [\n      { status: \"\", friendId: \"\" }\n    ],\n    picture: ''\n\n  };\n  \n\n\n  email = new FormControl('', [Validators.required, Validators.email]);\n\n  errorMessage = '';\n  hide = true;\n\n  constructor(private authService: AuthService, private _router: Router,private commentService: CommentService) {\n\n\n  \n  }\n\n  ngOnInit() {\n\n\n  }\n\n \n\n  getErrorMessage() {\n    return this.email.hasError('required') ? 'Le champs doit etre rempli' :\n        this.email.hasError('email') ? \"Le format de l'adresse Email est invalide\" :\n            '';\n  }\n  onLogin() {\n   \n\n    this.authService.loginUser(this.userData)\n      .subscribe(\n        res => {\n          if (res.message || res.err) {\n            if(res.message === undefined) this.errorMessage = res.err;\n            if(res.err=== undefined ) this.errorMessage = res.message;\n            this.userData.pseudo =null;\n            this.userData.password = null;\n            \n           \n          } else {\n        \n\n            this.commentService.onLogin(this.userData.pseudo);\n\n            localStorage.setItem('token', res.token);\n            this.authService.getData().subscribe(\n              res => {\n                this.userData = res.user;\n                console.log('**/***/***/', this.userData._id)\n\n                if(this.userData.admin){\n                  this._router.navigate(['/admin']);\n                }else {\n                  this.userData.online= true;\n                  this.authService.updateUser(this.userData)\n                  this._router.navigate(['/member_space', this.userData.pseudo]);\n\n                }\n              }\n\n            )\n           \n            \n          }\n\n        }\n      );\n\n      \n\n  }\n\n}\n","module.exports = \".example-card {\\n    margin-left: 25%;\\n    \\n    max-width: 400px;\\n  }\\n  \"","module.exports = \"\\n<app-header></app-header>\\n\\n<mat-card class=\\\"example-card\\\">\\n    <form #password=\\\"ngForm\\\">\\n<p> Veuillez indiquer votre adresse Email pour envoi  du mot de passe.  </p>\\n\\n<mat-form-field>\\n    <input matInput placeholder=\\\"Email\\\" [(ngModel)]=\\\"userData.email\\\" name=\\\"email\\\"  [formControl]=\\\"email\\\" required>\\n    <mat-error *ngIf=\\\"email.invalid\\\">{{getErrorMessage()}} {{message}}</mat-error>\\n</mat-form-field>\\n<br>\\n <button mat-raised-button [disabled]=\\\"!email.valid\\\"  (click)=\\\"passwordRetrival()\\\">Envoyer</button>\\n</form>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport {FormBuilder, FormGroup, FormControl, Validators} from '@angular/forms';\n\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { NewPasswordComponent } from '../new-password/new-password.component';\n\n@Component({\n  selector: 'app-lost-password',\n  templateUrl: './lost-password.component.html',\n  styleUrls: ['./lost-password.component.css']\n})\nexport class LostPasswordComponent implements OnInit {\n userData = {\n   email: ''\n };\n email = new FormControl('', [Validators.required, Validators.email]);\n\n\n message: '';\n  constructor(private authService: AuthService, private _router: Router,public dialog: MatDialog) { }\n\n  ngOnInit() {\n  }\n\n  passwordRetrival() {\n    console.log(this.userData);\n    this.authService.lostPassword(this.userData)\n    .subscribe(\n      res => {\n        if (res.success) {\n          const dialog = this.dialog.open(NewPasswordComponent,{\n            width : '400px',\n            data :res.success\n           \n          });\n          console.log(res)\n          dialog.afterClosed().\n          subscribe(\n            res => this._router.navigate(['/login'])\n          )\n         \n        } else {\n\n          this.message = res.error;\n          this.userData.email = '';\n        }\n      }\n    );\n\n  }\n\n\n\n  getErrorMessage() {\n    return this.email.hasError('required') ? 'Le champs doit etre rempli' :\n        this.email.hasError('email') ? \"Le format de l'adresse Email est invalide\" :\n            '';\n  }\n\n\n}\n","module.exports = \".sidenav-container {\\n  height: 100%;\\n}\\n\\n.sidenav {\\n  width: 200px;\\n}\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n}\\n\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav\\n    #drawer\\n    class=\\\"sidenav\\\"\\n    fixedInViewport=\\\"true\\\"\\n    [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n    [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n    [opened]=\\\"!(isHandset$ | async)\\\">\\n    <mat-toolbar color=\\\"primary\\\">Menu</mat-toolbar>\\n    <mat-nav-list>\\n      <a mat-list-item href=\\\"#\\\">Link 1</a>\\n      <a mat-list-item href=\\\"#\\\">Link 2</a>\\n      <a mat-list-item href=\\\"#\\\">Link 3</a>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\"\\n        *ngIf=\\\"isHandset$ | async\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n      <span>reseau-social-e2e</span>\\n    </mat-toolbar>\\n    <!-- Add Content Here -->\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n    \n  constructor(private breakpointObserver: BreakpointObserver) {}\n  \n  }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, identity } from 'rxjs';\nimport { Config } from './config';\nimport * as io from 'socket.io-client';\n\n@Injectable()\nexport class MemberActionService {\n  member = {\n    _id:'',\n    email : '',\n    password : ''\n  };\n \n  url = Config.SOCKET_HOST || \"http://localhost\";\n  private _findMember = this.url+'/api/member';\nprivate _getMemberById=this.url+'/api/memberbyid'\n  private _addFriendUrl= this.url+'/api/addfriend';\n  private _acceptInvitationUrl=this.url+'/api/acceptInvitation'\n  private _updateInvitationUrl=this.url+'/api/updateInvitation'\nprivate _cancelRequestUrl = this.url+'/api/cancelRequest'\n  private socket = io(Config.SOCKET_HOST);\n  \n  constructor(private http:HttpClient) { }\n \n\n  searchResult(keyword) {\n    return this.http.post<any>(this._findMember, keyword);\n  }\n\n\n  add_friend (member, user){\n        return this.http.post<any>(this._addFriendUrl, {member:member, user:user})\n  }\n\n  onRequestInvitation(){\n\n    let observable = new Observable<any>\n    (observer => {\n      this.socket.on('invitation:res', (data ) => {\n        observer.next(data);\n      });\n      return () => {this.socket.disconnect();};\n    })\n    return observable;\n   }\n\n\n   onRequestInvitationCancel(){\n\n    let observable = new Observable<any>\n    (observer => {\n      this.socket.on('invitation:ko', (data ) => {\n        observer.next(data);\n      });\n      return () => {this.socket.disconnect();};\n    })\n    return observable;\n   }\n\n\n  \n   requestInvitation(data){\n     this.socket.emit('invitation:send', data)\n   }\n\n   acceptInv(data){\n    this.socket.emit('invitation:ok', data)\n   }\n\n   cancelInvitation(data){\n    this.socket.emit('invitation:cancel', data)\n   }\n  \n\n\n  cancelInvitationrequest(member, user){\n    this.cancelInvitation({member:member, user:user});\n    return this.http.post<any>(this._cancelRequestUrl, {member:member, user:user})\n  }\n\n  acceptInvitation(member, user){\n this.acceptInv(member)\n    return this.http.post<any>(this._acceptInvitationUrl, {member:member, user:user})\n  }\n  updateInvitation(member, user){\n\n    return this.http.post<any>(this._updateInvitationUrl, {member:member, user:user})\n  }\n\n  getMemberById(id){\n    return this.http.post<any>(this._getMemberById, id)\n  }\n}\n","module.exports = \"#search{\\n    width: 30%;\\n  }\\n\\n  .example-form {\\n    min-width: 150px;\\n    max-width: 500px;\\n    width: 100%;\\n  }\\n\\n  .example-full-width {\\n    width: 100%;\\n  }\"","module.exports = \"\\n\\n <form class=\\\"example-form\\\" #search=\\\"ngForm\\\" (submit)=\\\"searchMember();search.reset()\\\">\\n    <mat-form-field class=\\\"example-full-width\\\">\\n        \\n      <input matInput placeholder=\\\"Email\\\" type=\\\"text\\\" name=\\\"name\\\" id=\\\"search\\\" [(ngModel)]=\\\"keyword.name\\\" required>\\n      <i class=\\\"material-icons\\\">\\n          search\\n          </i>\\n    </mat-form-field>\\n\\n</form> \"","import { Component, OnInit } from '@angular/core';\nimport { MemberActionService } from '../member-action.service';\n\n@Component({\n  selector: 'app-member-search',\n  templateUrl: './member-search.component.html',\n  styleUrls: ['./member-search.component.css']\n})\n\nexport class MemberSearchComponent implements OnInit {\n  keyword={\n    name:''\n  }\n  constructor(private memberActionService: MemberActionService) { }\n\n  ngOnInit() {\n  }\n\n  searchMember(){\n    console.log(this.keyword)\n    this.memberActionService.searchResult(this.keyword)\n    .subscribe(\n      res => {\n        \n        console.log('',res)\n      }\n    )\n    //console.log(this.keyword);\n    }\n}\n","module.exports = \"/* \\n.member {\\n\\n  position: absolute;\\n  display: flex;\\n  flex-flow: row;\\n  \\n}\\n */\\n\\n.picture img{\\n  border-radius: 50%\\n}\\n\\n.mat-panel-description{\\n  margin: 10px;\\n}\\n\\n/* .friends{\\n  position: absolute;\\n padding-left:70%;\\n max-width: 400px;\\nmargin-right: 50px;\\n} */\\n\\n/*  .container-fixe {\\n   \\n      margin-top: 2%;\\n      display:flex;\\n      flex-flow: row wrap;\\n      justify-content: space-around;\\n  } */\\n\\n.example-headers-align .mat-expansion-panel-header-title, \\n.example-headers-align .mat-expansion-panel-header-description {\\n  flex-basis: 0;\\n}\\n\\n.example-headers-align .mat-expansion-panel-header-description {\\n  justify-content: space-between;\\n  align-items: center;\\n}\\n\\nmat-list-item  img {\\n  width: 46px;\\n  border-radius: 50%;\\n  padding-right: 10px;\\n}\\n\\n.example-card {\\n\\n  width: 400px;\\n  padding-bottom: 100px;\\n  margin-bottom: 20px;\\n  \\n}\\n\\n.card{\\n  padding-bottom: 20px;\\n}\\n\\n/* .container {\\n  display: flex;\\n  flex-flow: column wrap;\\n align-items: center;\\n justify-content: space-between;\\n\\n  margin-bottom: 2%;\\n  \\n\\n} */\\n\\n/* chat ------*/\\n\\n/* .wrapper{\\n  display: flex;\\n  flex-direction: column;            \\n  height: 100vh;\\n  overflow: hidden;\\n}\\n\\n.header{\\n  flex: 0 0 auto;  \\n  background: #aaa;\\n}\\n.content{\\n  flex: 1 1 auto;     \\n  overflow-y: auto;     \\n}\\n\\n*{\\n  box-sizing: border-box;\\n  margin: 0;\\n  padding: 0;\\n}\\n*:after,\\n*:before{\\n  box-sizing: border-box;\\n} */\"","module.exports = \"\\n <app-header></app-header>\\n   \\n  <div class=\\\"d-flex justify-content-between flex-row bd-highlight mb-4\\\">\\n  <div class=\\\"member p-2 bd-highlight\\\">\\n    <mat-card class=\\\"card\\\">\\n        <mat-card-header>\\n            <img src=\\\" {{user.picture}}\\\"  class=\\\"rounded\\\" alt=\\\"\\\">\\n          <mat-card-title>\\n            {{user.first_name}}\\n            {{user.last_name}}\\n                </mat-card-title>\\n          <mat-card-subtitle>\\n            {{user.pseudo}}\\n           \\n          </mat-card-subtitle>\\n        </mat-card-header>\\n        <mat-card-content>\\n        </mat-card-content>\\n      </mat-card>\\n\\n</div>\\n<div class=\\\"chat\\\">\\n</div>\\n\\n\\n<div class=\\\" member p-2 bd-highlight\\\" >\\n    <mat-card  class=\\\"example-card \\\">\\n       \\n        <mat-card-content >\\n           <form class=\\\"example-form\\\" #commentF=\\\"ngForm\\\" (submit)=\\\"posted();commentF.reset()\\\" >\\n               <mat-form-field>\\n                 <input matInput placeholder=\\\"titre du message\\\" name=\\\"title\\\" id=\\\"titre\\\" [(ngModel)]=\\\"comment.title\\\" required >\\n               </mat-form-field>\\n                <br>\\n               <mat-form-field class=\\\"example-full-width\\\">\\n                 <textarea matInput placeholder=\\\"Poster un commentaire......\\\" name=\\\"comment\\\" [(ngModel)]=\\\"comment.content\\\"></textarea>\\n               </mat-form-field>\\n                <br>\\n               <button type=\\\"submit\\\" mat-mini-fab color=\\\"accent\\\" [disabled]=\\\"!commentF.form.valid\\\">Poster\\n               </button>\\n           </form>\\n        </mat-card-content>\\n \\n    </mat-card>\\n      \\n\\n\\n    <div class=\\\"card\\\" style=\\\"width:400px;\\\" *ngFor=\\\"let comment of userComment\\\">\\n        <div class=\\\"card-header\\\">\\n            <img src=\\\"{{comment.authorPicture}}\\\" width=\\\"48px\\\" alt=\\\"Card image cap\\\">\\n            {{comment.author }}\\n          </div>\\n        \\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\">{{comment.title}}</h5>\\n          <p class=\\\"card-text\\\">\\n              {{comment.content}}\\n        </div>\\n        <div class=\\\"card-footer text-muted\\\">\\n            Posté le  {{ comment.date| date:'dd-MM-yyyy à HH:mm' }}\\n          </div>\\n         <!--  <div>\\n            <form #comment=\\\"ngForm\\\">\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                <textarea matInput placeholder=\\\"repondre.....\\\" name=\\\"comment\\\" [(ngModel)]=\\\"comment.content\\\" ></textarea>\\n              </mat-form-field>\\n               <br>\\n              <button type=\\\"submit\\\" mat-mini-fab color=\\\"accent\\\" [disabled]=\\\"!comment.form.valid\\\">reply\\n              </button>\\n            </form>\\n          </div> -->\\n        \\n      </div>\\n\\n\\n </div>\\n \\n\\n\\n\\n<div class=\\\" p-2 bd-highlight\\\"  >\\n\\n\\n    <div  class=\\\"request\\\">\\n        <form *ngIf=\\\"!visitor || isAdmin\\\" class=\\\"example-form\\\" #search=\\\"ngForm\\\" >\\n        \\n            <mat-form-field>\\n              <input matInput placeholder=\\\"nom, prenom ou pseudo\\\" name=\\\"name\\\" [(ngModel)]=\\\"keyword.name\\\" >\\n            </mat-form-field>\\n            <button type=\\\"submit\\\" mat-button color=\\\"primary\\\" (click)=\\\"searchfriend()\\\" >OK</button>\\n\\n            <mat-list *ngFor=\\\"let member of resultList\\\">\\n              \\n                <mat-list-item> \\n                 <form class=\\\"example-form\\\" >\\n                    <img src=\\\" {{member.picture}}\\\" alt=\\\"\\\"> {{member.pseudo}} \\n                    \\n                    <button matTooltip=\\\"Ajouter\\\" type=\\\"submit\\\" mat-button (click)=\\\"sendInvitationrequest(member)\\\" ><i class=\\\"material-icons\\\">\\n                        \\n                        </i></button>\\n                  </form>\\n                 </mat-list-item>\\n      \\n               </mat-list>\\n        \\n              </form>\\n          \\n \\n\\n\\n         <table *ngIf=\\\"!visitor || isAdmin\\\" class=\\\"table table-striped\\\">\\n            <thead>\\n            Membres\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let member of membersNotFriends\\\">\\n                <a (click)=\\\"sendInvitationrequest(member)\\\" >\\n                <td><img src=\\\"{{member.picture}}\\\" alt=\\\"\\\" width=\\\"48px\\\"></td>\\n                <td>{{member.pseudo}} </td>\\n              </a>\\n                <td><button  matTooltip=\\\"Ajouter\\\" type=\\\"submit\\\" mat-button (click)=\\\"sendInvitationrequest(member)\\\" ><i *ngIf=\\\"!visitor || isAdmin\\\" class=\\\"material-icons\\\">\\n                    person_add\\n                    </i></button></td>\\n              </tr>\\n              \\n            </tbody>\\n          </table>\\n\\n          \\n          \\n            \\n                   \\n                    <h4>Ami(e)s</h4>\\n                   \\n                     <mat-button-toggle-group name=\\\"status\\\" aria-label=\\\"Font Style\\\">\\n                        <mat-button-toggle (click)=\\\"all()\\\"  matTooltip=\\\"Tous les status\\\" value=\\\"demande\\\">\\n                            <i  class=\\\"material-icons\\\">\\n                                clear_all\\n                                </i></mat-button-toggle>\\n\\n                        <mat-button-toggle  (click)=\\\"confirm()\\\"     matTooltip=\\\"Confirmé\\\" value=\\\"confirme\\\"><i    class=\\\"material-icons\\\" >done</i></mat-button-toggle>\\n                        <mat-button-toggle (click)=\\\"waiting()\\\"  matTooltip=\\\"En attente de confirmation\\\" value=\\\"attente\\\"><i  class=\\\"material-icons\\\" >arrow_left</i></mat-button-toggle>\\n                        <mat-button-toggle  (click)=\\\"send()\\\"  matTooltip=\\\"Demande d'ami envoyée\\\" value=\\\"demande\\\"><i   class=\\\"material-icons\\\" >arrow_right</i></mat-button-toggle>\\n                      </mat-button-toggle-group>\\n                      <p>\\n                      </p>\\n                      \\n              <table>\\n                  <thead>\\n                      \\n                  </thead>\\n                  <tbody>\\n                    <tr  *ngFor=\\\"let friend of friends\\\"  >\\n                      <td><img class=\\\"picture\\\" (click)=\\\"onSelect(friend.members)\\\" src=\\\"{{friend.members.picture}}\\\" alt=\\\"\\\" style=\\\"width: 36px;\\\" alt=\\\"\\\"></td>\\n                      <td>{{friend.members.pseudo}} </td>\\n                      \\n                      <td *ngIf=\\\"friend.status=='confirmer'\\\" (click)=\\\"invitetoChat(friend)\\\" routerLink=\\\"chat_window\\\">\\n                        <i  matTooltip=\\\"chat\\\" class=\\\"material-icons\\\" >chat_bubble_outline</i>\\n                      </td>\\n\\n                      <div  *ngIf=\\\"friend.status=='en attente de confirmation'\\\">\\n                          <td>\\n                              <i *ngIf=\\\"!visitor || isAdmin\\\" (click)=\\\"acceptRequestInvitation(friend)\\\" class=\\\"material-icons\\\"> group_add</i>\\n                              \\n                          </td>\\n                          <td>\\n                              <i *ngIf=\\\"!visitor || isAdmin\\\" (click)=\\\"cancelInvitation(friend)\\\" matTooltip=\\\"Annuler la demande\\\"  class=\\\"material-icons\\\">\\n                                  cancel\\n                                  </i>\\n                          </td>\\n\\n                      </div>\\n                     \\n\\n                    </tr>\\n\\n\\n                  </tbody>\\n\\n              </table>\\n              \\n                \\n      \\n      </div>\\n\\n<!-- <div class=\\\"chat\\\">\\n  <h6 class=\\\"pb-2 mb-0\\\">Group Chat <button class=\\\"btn btn-sm btn-primary\\\" >invite others</button></h6>\\n  <div class=\\\"chats\\\">\\n    <div class=\\\"chatbox\\\">\\n      <div *ngFor=\\\"let chat of chats\\\">\\n        <div class=\\\"message sent\\\" *ngIf=\\\"chat.type!=='joined' && chat.isMe\\\">\\n          {{chat.message}}\\n          <span class=\\\"metadata\\\">\\n            <span class=\\\"time\\\">{{chat.createdAt | date: 'HH:mm aaa'}}</span>\\n          </span>\\n        </div>\\n        <div class=\\\"message received\\\"  *ngIf=\\\"chat.type!=='joined' && !chat.isMe\\\">\\n          <strong>{{chat.displayName}}</strong> <br>\\n          {{chat.message}}\\n          <span class=\\\"metadata\\\">\\n            <span class=\\\"time\\\">{{chat.createdAt | date: 'HH:mm aaa'}}</span>\\n          </span>\\n        </div>\\n        <p align=\\\"center\\\" class=\\\"joined\\\"  *ngIf=\\\"chat.type==='joined'\\\">\\n        <span class=\\\"rounded bg-primary text-white\\\">{{chat.displayName}} Joined</span>\\n        </p>\\n      </div>\\n    </div>\\n  \\n    <div class=\\\"d-flex flex-row\\\">\\n      <input [(ngModel)]=\\\"message\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter message\\\" style=\\\"margin-right: 10px\\\">\\n      <button [disabled]=\\\"!message || sending\\\" (click)=\\\"sendMessage(message)\\\" class=\\\"btn btn-primary\\\"> {{sending ? 'Sending' : 'Send'}}</button>\\n    </div>\\n  </div>\\n  \\n  </div>\\n</div> -->\\n\\n</div>\\n\\n</div>\\n\\n<div>\\n\\n</div>\\n\\n\\n\\n<router-outlet></router-outlet> \\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { AuthService } from '../auth.service';\nimport { CommentService } from '../comment.service';\nimport { User } from '../models/user';\nimport { Comment } from '../models/comment';\nimport { MemberActionService } from '../member-action.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogConfig } from '@angular/material';\nimport { Observable } from 'rxjs';\nimport * as Rx from 'rxjs';\nimport { ChatWindowComponent } from '../chat-window/chat-window.component';\nimport { Http } from '@angular/http';\nimport { ChatService } from '../chat/chat.service';\n//import { ChatService } from '../services/chat.service';\nimport { Ichat } from '../interfaces/ichat';\n\n\n\n@Component({\n  selector: 'app-member-space',\n  templateUrl: './member-space.component.html',\n  styleUrls: ['./member-space.component.css']\n})\n\n\n\nexport class MemberSpaceComponent implements OnInit {\n\n\n  member_pseudo;\n  step = 0;\n  keyword = {\n    name: ''\n  };\n  resultList: any[];\n  messageErreur;\n  isAdmin:Boolean;\n  isOnline:false;\n  isConfirm:false;\n\n  comment: Comment = {\n    title: '',\n    author: '',\n    content: '',\n    date: null,\n    authorId: '',\n    authorPicture: '',\n    explicit: false\n\n  }\n\n \n\n\n  dataSource;\n\n  //allMembers =[];\n\n  user: User = {\n    _id: '',\n    first_name: '',\n    last_name: '',\n    pseudo: '',\n    email: '',\n    admin: false,\n    online: false,\n    dateNaissance: new Date,\n    gender: '',\n    password: '',\n    friendsList: [\n      { status: \"\", friendId: \"\" }\n    ],\n    picture: ''\n\n  };\n  currentUser;\n  membersNotFriends = [];\n  friends=[];\n  visitor: Boolean;\n  userPicture: String;\n  userComment;\n  message;\n  chats: Ichat[] = [];\n  sending: boolean;\n\n\n  constructor(\n    private activatedRouter: ActivatedRoute,\n    private commentService: CommentService,\n    private router: Router, private authService: AuthService,\n    private memberActionService: MemberActionService,\n    private chatService:ChatService\n    \n  ) {\nthis.visitor=false;\n    this.authService.getData().subscribe(\n      res => {\n        this.user=res.user\n        \n        this.authService.iamOnline(this.user);\n       \n      \n      }\n    )\n\n    this.chatService.onInvitationChatRequest().subscribe(\n      res => {\n\n        if(res.myFriend=== this.user.pseudo){\n\n          this.router.navigate(['/member_space/'+this.user.pseudo+'/chat_window'])\n\n          alert('invitation au chat de'+res.me)\n\n        }\n\n      }\n    )\n\n\n   \n\n\n\n/*     this.authService.updateUserStatus(this.user).subscribe(\n      res => {\n        console.log(res)\n      }\n    ) */\n   //this.authService.onConnected(this.user);\n    \n    \n    this.commentService.onPosted()\n      .subscribe(data => {\n        this.userComment.splice(0, 0, data)\n        //console.log(\"Apres ajout\",this.userComment)\n      }\n      );\n\n    this.memberActionService.onRequestInvitation().subscribe(\n      invitation => {\n        console.log(invitation)    \n            this.message = invitation\n\n      }\n    )\n\n    this.memberActionService.onRequestInvitationCancel()\n    .subscribe(data => {\n      console.log(\"Annulation\",data)\n      if(data.member.members._id == this.user._id){\n        alert(data.user.pseudo+ \" n'a pas donné suite a votre demande d'amis\")\n        console.log('Ma liste amis',this.user.friendsList)\n\n       const finder = this.user.friendsList.findIndex(user =>  user.friendId === data.user._id)\n       console.log(finder)\n       this.user.friendsList.splice(this.user.friendsList.findIndex(user =>  user.friendId === data.user._id),1)\n        console.log(this.user.friendsList)\n        this.authService.updateUser(this.user)\n\n      }\n    })\n\n\n  \n\n\n  }\n\n  \n\n\n \n\n  ngOnInit() {\n\n\n\n\n    this.activatedRouter.paramMap.subscribe(\n      params => {\n\n        \n       \n        this.member_pseudo = params.get('pseudo')\n        this.friends=[]\n       \n        this.membersNotFriends = [];\n        \n        this.authService.getData().subscribe(\n         \n          res => {\n            this.user = res.user;\n            this.isAdmin=this.user.admin;\n            //console.log('Moi user',this.user)\n           // this.onSubmit()\n            const myFriends=this.user.friendsList.filter(element => element.status=='confirmer');\n           // console.log(myFriends);\n            myFriends.forEach(element => {\n              //console.log(element)\n              this.memberActionService.getMemberById(element).subscribe(\n                res => {\n                  this.friends.push(res)\n                  //console.log(res\n                 \n\n                }\n              )\n            })\n\n/*             this.chatService.getChannel().bind('chat',data => {\n              //console.log(data)\n              if(data.email === this.chatService.user.email){\n                data.isMe= true;\n              }\n              this.chats.push(data)\n            })\n */\n            this.commentService.getMemberComments(this.member_pseudo)\n            .subscribe(\n              res => {\n              // console.log('Les commentaires de ki ???',res)\n                this.userComment = res.comments\n              }\n            )\n            \n\n            console.log(\"Mes amis\", this.friends);\n\n            //console.log('le user est  connecté :',res.user._id, res.user.last_name)\n\n            if (this.member_pseudo === this.user.pseudo) {\n              this.visitor = false;\n            } else {\n              this.visitor = true;\n              //console.log('Amis ou membre qui visite ma page',false)\n            }\n          });\n\n        this.authService.getAllMembers()\n          .subscribe(\n            members => {\n              this.membersNotFriends = members\n              //console.log('Liste de tous les membres avant traitement',this.membersNotFriends)\n              //On se supprime de la liste des membre a l'affichage le mebre loggé\n              this.membersNotFriends.splice(this.membersNotFriends.findIndex(user => user.pseudo === this.member_pseudo), 1)\n\n              this.authService.memberSpace(this.member_pseudo).subscribe(\n                res => {\n                  //console.log(\"le res est comment ??\",res)\n                  if(res ===  null ||res === undefined){\n                    this.router.navigate(['/notFound'])\n                  }else {\n                    this.user = res;\n                  }\n              \n               \n                 // console.log('liste amis', this.user.friendsList)\n                 // On enleve de la lsite les \n                  //console.log('Liste de tous les membres ', this.membersNotFriends)\n                  this.user.friendsList.forEach(element => {\n                   // console.log('element bi !!!',element.status)\n                    this.membersNotFriends.splice(this.membersNotFriends.findIndex(user => user._id === element.friendId), 1)\n                  })\n\n\n                }\n              )\n\n            }\n          )\n          //On recupere les info du user connecté\n        this.authService.getData().\n          subscribe(\n\n            res => {\n              this.currentUser = res\n              this.comment.author = res.user.first_name + ' ' + res.user.last_name;\n   //console.log('ki est tu pseudo ??',this.member_pseudo)\n              if (res.user.pseudo != this.member_pseudo) {\n                this.comment.authorId = this.member_pseudo\n              } else {\n                this.comment.authorId = res.user.pseudo\n              }\n              this.comment.authorPicture = res.user.picture;\n\n            }\n\n          )\n\n\n      }\n\n    )\n\n\n  }\n\n\n\n  chatRequest(friend){\n    const pseudo =friend.members.pseudo\n    this.memberActionService.requestInvitation(pseudo);\n  }\n\n \n\n/* \n  onSubmit() {\n    const params= {email:this.user.email, displayName:this.user.pseudo}\n    this.chatService.join(params).subscribe(\n      res => {\n        console.log(res)\n      },\n      error => {\n        console.error(error)\n      }\n    )\n    //this.chatService.openChatRoom({user:this.user, friend:friend.members})\n    \n\n  } */\n/* \n  sendMessage(message: string) {\n    this.sending = true;\n    this.chatService.sendMessage(message)\n      .subscribe(resp => {\n        console.log(resp)\n        this.message = undefined;\n        this.sending = false;\n      }, err => {\n        this.sending = false;\n      } );\n  } */\n\n\n\n  remove(array, element) {\n    const index = array.indexOf(element);\n    array.splice(index, 1);\n  }\n\n  updateFriendList(member) {\n   \n     this.friends.push(member)\n    \n  }\n\n\n\n\n  updateMemberList(member) {\n    this.membersNotFriends.splice(this.membersNotFriends.findIndex(user => user === member), 1)\n  }\n\n  setStep(index: number) {\n    this.step = index;\n  }\n\n  nextStep() {\n    this.step++;\n  }\n\n  prevStep() {\n    this.step--;\n  } \n\n\n  posted() {\n    this.comment.date = new Date();\n    this.commentService.postMessage(this.comment)\n\n  }\n/* \n  openDialog(friend) {\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n\n    dialogConfig.data = {\n    me:  this.user,\n    myfriend:friend\n    }\n    \n\n    this.dialog.open(ChatWindowComponent, dialogConfig);\n} */\n\n \n\n\n  all(){\n\n    this.friends=[]\n    \n    this.user.friendsList.forEach(element => {\n      //console.log(element)\n      this.memberActionService.getMemberById(element).subscribe(\n        res => {\n          this.friends.push(res)\n         // console.log(this.friends)\n         \n\n        }\n      )\n    })\n\n\n    //console.log('de alll',this.friends)\n\n  }\n\n  confirm(){\n    this.friends=[];\n    const conf= this.user.friendsList.filter(element => element.status=='confirmer');\n    //console.log('conf est egala a ',conf)\n    conf.forEach(element => {\n      //console.log(element)\n      this.memberActionService.getMemberById(element).subscribe(\n        res => {\n          this.friends.push(res)\n          //console.log(this.friends)\n         \n\n        }\n      )\n    })\n\n    //console.log('Confirme',this.friends)\n    //console.log(this.user.friendsList)\n\n  }\n  send(){\n   \n    this.friends=[];\n    const send = this.user.friendsList.filter(element => element.status=='invitation en cours ');\n    send.forEach(element => {\n      //console.log(element)\n      this.memberActionService.getMemberById(element).subscribe(\n        res => {\n          this.friends.push(res)\n          //console.log('envoyées',this.friends)\n         \n\n        }\n      )\n    })\n  //  console.log('pour send',send)\n  //  console.log('envoyées',this.friends)\n    \n\n  }\n\n  waiting(){\n\n\n    this.friends=[];\n    const wainting= this.user.friendsList.filter(element => element.status=='en attente de confirmation');\n    wainting.forEach(element => {\n      //console.log(element)\n      this.memberActionService.getMemberById(element).subscribe(\n        res => {\n          this.friends.push(res)\n          //console.log(res\n         \n\n        }\n      )\n    })\n    //console.log('En attente',this.friends)\n  }\n\n  searchfriend() {\n console.log(this.authService.getAllMembers().subscribe(\n   res =>{\n     \n    console.log(res)\n   } )\n  )\n  }\n\n  onSelect(member) {\n    this.router.navigate(['/member_space', member.pseudo])\n\n  }\n\n  sendInviation(member){\n\n    this.memberActionService.requestInvitation(member);\n  }\n\n\n\n\n  cancelInvitation(member) {\n    console.log(member)\n    this.membersNotFriends.push(member.members);\n    const finder=this.user.friendsList.findIndex(user =>  user.friendId === member.members._id)\n    this.user.friendsList.splice(this.user.friendsList.findIndex(user =>  user.friendId === member.members._id),1)\n    console.log(finder)\n    console.log(this.user.friendsList.length)\n    this.memberActionService.cancelInvitationrequest(member,this.user)\n    this.authService.updateUser(this.user).subscribe(\n      resp => console.log('Mise a jour ok ???',resp)\n    )\n  }\n\n  acceptRequestInvitation(member){\n\n    this.user.friendsList.forEach(element => {\n\n      if (element.friendId == member.members._id && element.status == \"en attente de confirmation\") {\n\n        element.status = \"confirmé\";\n      }\n\n\n    });\n\n    this.memberActionService.acceptInvitation(member, this.user).subscribe(\n      res => {\n\n        if(res==1){\n        // On fait la meme chose de l'autre coté \n        this.memberActionService.updateInvitation(member,this.user).subscribe(\n          res2=> console.log(res2)\n        )\n\n        this.authService.getData().subscribe(\n          res => {\n            this.user= res.user;\n          } \n        );\n          console.log('update ok')\n        }else {\n\n          console.log('update non effectué')\n        }\n\n      }\n    )\n  }\n\n \n\n\n\n  acceptInvitation(friendId) {\n    console.log(friendId.members._id)\n    console.log(this.user.friendsList)\n    this.user.friendsList.forEach(element => {\n\n      if (element.friendId == friendId.members._id && element.status == \"en attente de confirmation\") {\n\n        element.status = \"confirmé\";\n      }\n\n\n    });\n    console.log('aprés modif', this.user.friendsList)\n\n    this.authService.updateUser(this.user).subscribe(\n      res => console.log(res)\n    )\n  } \n\n  sendInvitationrequest(member) {\n    console.log('Id a inviter ', member)\n    console.log(' Liste vide ? ??????', this.user.friendsList)\n    let test;\n\n\n    if (this.user.friendsList.length != 0 && this.member_pseudo != member.pseudo) {\n      test = this.user.friendsList.find((element) => {\n\n        return element.friendId == member._id;\n\n      })\n    }\n\n\n   \n    \n\n    console.log(test)\n\n    if (test === undefined || this.user.friendsList.length == 0) {\n\n      // console.log('On rajoute a la liste de demande amis',id)\n\n      // console.log('On continu et on ajoute  la liste')\n\n      //console.log(\"Le membre est comment ?\",id)\n      console.log('//////', member)\n      console.log('les amis du user en cour', this.friends)\n      this.memberActionService.add_friend(member,this.user)\n        .subscribe(\n          res => {\n            if (res) {\n              this.updateMemberList(member);\n              this.user.friendsList.push({ status: \"invitation en cours \", friendId: member._id })\n              \n              this.memberActionService.getMemberById({ status: \"invitation en cours \", friendId: member._id }).subscribe(\n                res => {\n                  this.friends.push(res)\n                  //console.log(res\n                 \n\n                }\n              )\n\n\n              console.log(member._id);\n              this.authService.updateUser(this.user).\n                subscribe(\n                  res => {\n                    console.log('Apres update la reponse API', res.data)\n                    //this.updateFriendList(member);\n                    \n\n                  }\n                )\n\n\n\n            }\n\n\n          })\n    } else {\n\n      alert('Invitation deja envoyée ou Membre deja amis')\n    }\n\n  }\n\n\ninvitetoChat(member){\n\n  this.chatService.sendChatInvitation({me:this.user.pseudo,myFriend:member.members.pseudo})\n  \n}\n\n\n\n\n\n}\n\n\n/* @Component({\n  selector: 'chat',\n  templateUrl: '../../app/templates/chat.html',\n})\nexport class InvitationRequest {\n  constructor(public dialogRef: MatDialogRef<InvitationRequest>, ) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n} */","module.exports = \"\"","module.exports = \"<mat-list>\\n        <mat-list-item *ngFor=\\\"let message of messages\\\">\\n          <img matListAvatar src=\\\"...\\\" alt=\\\"...\\\">\\n          <h3 matLine> {{message.from}} </h3>\\n          <p matLine>\\n            <span> {{message.subject}} </span>\\n            <span class=\\\"demo-2\\\"> -- {{message.content}} </span>\\n          </p>\\n        </mat-list-item>\\n      </mat-list>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { CommentService } from '../comment.service';\n\n@Component({\n  selector: 'app-members-list',\n  templateUrl: './members-list.component.html',\n  styleUrls: ['./members-list.component.css']\n})\nexport class MembersListComponent implements OnInit {\n member;\n  constructor(private authService: AuthService, private commentServie: CommentService) { }\n\n  ngOnInit() {\n    this.authService.getData().subscribe(\n      res => {\n          this.member= res.user;\n          console.log(this.member)\n      }\n    )\n    this.commentServie.isConnected()\n    .subscribe(\n      res => {\n        \n        console.log('les infos membre connecté', res)\n      }\n    )\n\n  }\n\n}\n","export class User {\n  static _id(arg0: any): any {\n    throw new Error(\"Method not implemented.\");\n  }\n   _id:String;\n   first_name: String;\n   last_name: String;\n   pseudo: String;\n   email: String;\n   dateNaissance: Date;\n    gender: String;\n    password: String;\n    admin: Boolean;\n    picture:String;\n  friendsList:Array<any>;\n    online:Boolean\n\n  constructor(user: any) {\n   this._id= user._id;\n    this.first_name = user.first_name;\n    this.last_name = user.last_name;\n    this.pseudo = user.pseudo;\n    this.email = user.last_name;\n    this.dateNaissance = user.dateNaissance;\n    this.password = user.password;\n    this.gender = user.gender;\n    this.admin = user.admin= false;\n    this.picture =user.picture;\n    this.friendsList = user.friendsList;\n    this.online = user.online;\n\n  }\n}\n","module.exports = \".sidenav-container {\\n  height: 100%;\\n \\n}\\n\\n.sidenav {\\n  width: 200px;\\n  box-shadow: 3px 0 6px rgba(0,0,0,.24);\\n  height: 100%;\\n}\\n\\n\\n\"","module.exports = \"\\n\\n<mat-sidenav-container class=\\\"sidenav-container\\\" >\\n  <mat-sidenav #sidenav [mode]=\\\"over\\\" color=\\\"primary\\\">\\n    \\n    <mat-toolbar color=\\\"primary\\\">\\n        <p><button *ngIf=\\\"getUserState()\\\" mat-button (click)=\\\"sidenav.toggle()\\\">Mon espace</button></p>\\n      </mat-toolbar>\\n  </mat-sidenav>\\n  <mat-toolbar color=\\\"primary\\\">\\n     \\n  </mat-toolbar>\\n  <mat-sidenav-content color=\\\"primary\\\">\\n      <mat-toolbar color=\\\"primary\\\">\\n          <button *ngIf=\\\"getUserState()\\\" mat-button (click)=\\\"sidenav.toggle()\\\">Menu</button>\\n          \\n      </mat-toolbar>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\\n\\n\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent {\n  isAuth = false;\n  title = 'app';\n \n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n    \n  constructor(private breakpointObserver: BreakpointObserver, private authService: AuthService) {}\n  \n  ngOnInit() {\n  \n  }\n    getUserState() {\n    this.isAuth = !!this.authService.getToken();\n    return this.isAuth;\n  }\n\n\n\n  }\n","module.exports = \"\"","module.exports = \"\\n<p>\\n\\n  Un nouveau mot de passe a été envoyé a votre adresse email, Merci de verifier votre boite aux lettres ainsi que le dossier spam !\\n  \\n</p>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { MatDialogRef,MatDialog, MAT_DIALOG_DATA} from '@angular/material';\nimport { LostPasswordComponent } from '../lost-password/lost-password.component';\n\n@Component({\n  selector: 'app-new-password',\n  templateUrl: './new-password.component.html',\n  styleUrls: ['./new-password.component.css']\n})\nexport class NewPasswordComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<NewPasswordComponent> ) { }\n\n  ngOnInit() {\n\n    \n  }\n\n}\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.css']\n})\nexport class NotificationsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n\\n\\n<h1>404 PAGE NOT FOUND</h1>\\n\\n<img src=\\\"../../assets/images/404 is not found.jpg\\\" alt=\\\"\\\">\\n\\n\\n<a routerLink=\\\"/home\\\"><i></i></a>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n  <form #register=\\\"ngForm\\\"class=\\\"example-form\\\">\\n    \\n    \\n      <table class=\\\"example-full-width\\\" cellspacing=\\\"20\\\">\\n        <tr>\\n        <td><mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput [(ngModel)]='user.first_name' name=\\\"first_name\\\"  required  placeholder=\\\"Prénom\\\">\\n        </mat-form-field></td>\\n        <td><mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput [(ngModel)]='user.last_name' name=\\\"last_name\\\"  required  placeholder=\\\"Nom\\\">\\n        </mat-form-field></td>\\n      </tr>\\n    \\n      <tr>\\n        <td>\\n            <mat-form-field>\\n                <input matInput placeholder=\\\"Email\\\" [(ngModel)]=\\\"user.email\\\" name=\\\"email\\\"  [formControl]=\\\"email\\\" \\n                pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\"\\n                required  (keyup)=\\\"checkEmail()\\\">\\n                <mat-error *ngIf=\\\"email.invalid\\\">{{getErrorMessage()}}</mat-error>\\n                <mat-hint *ngIf=\\\"!email.invalid\\\"><span style=\\\"color: red\\\">{{emailAvailable}}</span></mat-hint>\\n                \\n              </mat-form-field>\\n              \\n\\n        </td>\\n        <td>\\n            <mat-form-field>\\n                <input  #password minlength=\\\"6\\\" matInput placeholder=\\\"Choix du mot de passe\\\" [(ngModel)]=\\\"user.password\\\" required name=\\\"password\\\"  [type]=\\\"hide ? 'password' : 'text'\\\">\\n                <mat-hint align=\\\"end\\\">{{password.value.length}} / 6</mat-hint>\\n                <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n         </mat-form-field>\\n        </td>\\n      </tr>\\n  \\n       <tr>\\n         <td>\\n            <mat-form-field>\\n                <mat-select classe=\\\"example-form\\\" placeholder=\\\"Genre\\\" [(ngModel)]=\\\"user.gender\\\" name=\\\"genre\\\" value=\\\"user.gender\\\" required>\\n                    <mat-option selected value=\\\"femme\\\">Femme</mat-option>\\n                    <mat-option value=\\\"homme\\\">Homme</mat-option>\\n                  </mat-select>\\n            </mat-form-field>\\n         </td>\\n          \\n         <td>\\n            <mat-form-field>\\n                <input type=\\\"text\\\" matInput #pseudo minlength=\\\"5\\\" maxlength=\\\"10\\\" placeholder=\\\"Choix du pseudo\\\" [(ngModel)]=\\\"user.pseudo\\\" (change)=\\\"checkPseudo()\\\" required name=\\\"pseudo\\\">\\n                <mat-hint align=\\\"end\\\">{{pseudo.value.length}} / 5  -\\n                  \\n                   <span style=\\\"color:green\\\"> {{pseudoEnable}}   </span>\\n                    <span style=\\\"color: red\\\">{{pseudoNotEnable}}</span>\\n                  \\n                   </mat-hint>\\n                \\n         </mat-form-field>\\n         \\n\\n         </td>\\n\\n\\n       </tr>\\n        \\n       \\n    \\n  \\n     <tr>\\n        <td>\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" name=\\\"dateNaissance\\\" [(ngModel)]=\\\"user.dateNaissance\\\"  [matDatepicker]=\\\"picker\\\" placeholder=\\\"Date de Naissance\\\" required>\\n                <mat-datepicker-toggle matSuffix   [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #picker></mat-datepicker>\\n              </mat-form-field> \\n          \\n          \\n          \\n          \\n         <!--  <mat-form-field class=\\\"example-full-width\\\">\\n          <input type=\\\"date\\\" [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" matInput placeholder=\\\"Date de Naissance\\\" required>\\n        </mat-form-field> --></td>\\n    \\n      </tr>\\n    </table>\\n      \\n      <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!register.form.valid ||email.invalid || pseudoNotEnable || emailAvailable\\\"  (click)=\\\"registerUser()\\\" routerLink=\\\"/member_space/{{user.pseudo}}\\\">S'enregistrer</button>\\n\\n    </form>\\n    \\n\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../models/user';\nimport { Router } from '@angular/router';\nimport { AuthService} from '../auth.service';\nimport {FormBuilder, FormGroup, FormControl, Validators} from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['../login/login.component.css'],\n\n\n})\nexport class RegisterComponent implements OnInit {\n   user: User;\n   photoUpload: File = null;\n   imageUrl: string;\n   email = new FormControl('', [Validators.required, Validators.email]);\n   hide = true;\n   pseudoEnable;\n   pseudoNotEnable;\n   errormessage;\n   emailAvailable;\n   minDate = new Date(1920, 0, 1);\n  maxDate = new Date(2005, 0, 1);\n  constructor( private authService: AuthService, private _router: Router) {\n    \n    this.user = new User ({first_name: '',\n    last_name: '',\n    email: '',\n    gender: '',\n    password: '',\n    pseudo: '',\n    dateNaissance: '',\n    admin: false,\n    friendsList:[],\n      pictures:'',\n      online: false\n    });\n  }\n\n  getErrorMessage() {\n    return this.email.hasError('required') ? 'Le champs doit etre rempli' :\n        this.email.hasError('email') ? \"Le format de l'adresse Email est invalide\" :'';\n  }\n  ngOnInit() {\n    if (this.authService.getToken()) {\n      this._router.navigate(['/member_space',this.user.pseudo]);\n    }\n  }\n\n  checkEmail (){\n    this.authService.checkEmail(this.user)\n    .subscribe(\n      res => {\n          if(res.message){\n            this.emailAvailable = res.message\n          }else {\n            this.emailAvailable =res.error\n          }\n      } \n    )\n  }\n\n  checkPseudo(){\n    this.authService.checkPseudo(this.user)\n    .subscribe(\n      res => {\n        console.log(res)\n        if(res.message){\n          this.pseudoEnable = res.message\n          this.pseudoNotEnable=null\n        }else {\n          this.pseudoNotEnable =res.error\n          this.pseudoEnable=null\n        }\n      }\n       \n  )\n  }\n\n  registerUser() {\n    \n     this.authService.registerUser(this.user)\n    .subscribe(\n      res => {\n        if(res.message){\n          this.errormessage = res.message;\n          \n          //alert(this.errormessage);\n          this.user.email=\"\";\n        }else {\n\n          localStorage.setItem('token', res.token );\n          this._router.navigate(['/member_space',this.user.pseudo])\n        }\n        \n      }\n    );\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { PusherService } from './pusher.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {tap} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n  user: {displayName: string, email: string};\n  private _endPoint = 'http://localhost:5000/api'; // normally you use environment.ts\n  private _channel: any;\n\n  constructor(private _pusherService: PusherService, private _http: HttpClient) { \n    this._channel = this._pusherService.getPusher().subscribe('chat-group');\n  }\n\n\n  join(param): Observable<any> {\n    return this._http.post(`${this._endPoint}/join`, param)\n    .pipe(tap(data => {\n      this.user = param;\n    }));\n  }\n\n  sendMessage(message: string): Observable<any> {\n    const param = {\n      message,\n      type: 'human',\n      ...this.user\n    };\n    return this._http.post(`${this._endPoint}/message`, param);\n  }\n\n  getChannel() {\n    return this._channel;\n  }\n\n}\n\n\n","import { Injectable } from '@angular/core';\nimport * as Pusher from 'pusher-js';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PusherService {\n  private _pusher: any;\n  constructor() {\n\n    this._pusher = new Pusher('521f11269cd19399247e', {\n      cluster: 'eu',\n      encrypted: true\n    });\n   }\n\n\n\n   getPusher() {\n    return this._pusher;\n  }\n}\n","module.exports = \"\\n.example-spacer {\\n    flex: 1 1 auto;\\n    width: 100px;\\n  }\\n\\n  .stats{\\n      width: 200px;\\n      display: flex;\\n      flex-flow: row wrap;\\n      justify-content: space-around;\\n      \\n  }\"","module.exports = \"<table class=\\\"table\\\">\\n                <thead>\\n                  <tr>\\n                     <th scope=\\\"col\\\">*</th>\\n                    <th scope=\\\"col\\\">Pseudo</th>\\n                    <th scope=\\\"col\\\">Prenom</th>\\n                    <th scope=\\\"col\\\">Nom</th>\\n                    <th scope=\\\"col\\\">Status</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr *ngFor=\\\"let member of membersArray\\\">\\n                    \\n                    <td><img src=\\\"{{member.picture}}\\\" width=\\\"64px\\\" alt=\\\"\\\"></td>\\n                    <td>{{member.pseudo}}</td>\\n                    <td>@{{member.first_name}}</td>\\n                    <td>{{member.last_name}}</td>\\n                    <td>{{member.online}}</td>\\n                  </tr>\\n               \\n                </tbody>\\n  </table>\\n               \"","import { Component, OnInit } from '@angular/core';\nimport { CommentService } from '../comment.service';\nimport { AuthService } from '../auth.service';\nimport { User } from '../models/user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-stats',\n  templateUrl: './stats.component.html',\n  styleUrls: ['./stats.component.css']\n})\nexport class StatsComponent implements OnInit {\n  commentsArray: Array<Comment>= [];\n  membersArray:Array<User>= [];\n  currentUser;\n  constructor(private commentService: CommentService, private authService: AuthService, private router:Router) { \n    this.commentService.onBegin()\n    .subscribe(\n      res => console.log(res.message)\n    );\n     this.commentService.onPosted()\n    .subscribe(data => {\n      this.commentsArray.splice(0,0,data)\n     // console.log(\"Apres ajout\",this.commentsArray)\n    }\n    ); \n\n  }\n\n  ngOnInit() {\n\n    this.authService.getAllMembers().subscribe(\n      res => {\n        //console.log(res)\n        this.membersArray =res\n      }\n    )\n\n  this.authService.getData().subscribe(\n    res => {\n      this.currentUser = res.user\n      console.log(this.currentUser)\n\n    }\n  )\n\n    this.commentService.getComments().subscribe(\n      res => {\n        this.commentsArray=res.comments;\n        console.log('stats',this.commentsArray);\n        \n      }\n      \n    )\n\n  }\n\nonSelect(member){\n\n  this.router.navigate(['/member_space', member.pseudo])\n\n}\n  \n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { HttpInterceptor } from '@angular/common/http';\nimport { AuthService} from './auth.service';\n\n@Injectable()\nexport class TokenService implements HttpInterceptor {\n\n  constructor(private injector: Injector) { }\n  intercept(req, next) {\n    const authService = this.injector.get(AuthService);\n    const tokenizedReq = req.clone(\n      {\n        headers: req.headers.set('Authorization', 'bearer ' + authService.getToken())\n      }\n    );\n\n    return next.handle(tokenizedReq);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-uploader',\n  templateUrl: './uploader.component.html',\n  styleUrls: ['./uploader.component.css']\n})\nexport class UploaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".example-form {\\n    min-width: 150px;\\n    max-width: 300px;\\n    width: 100%;\\n  }\\n  \\n  .example-full-width {\\n    width: 100%;\\n  }\\n  \\n  .container {\\n      padding-left: 20%;\\n  }\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"container\\\">\\n<mat-tab-group>\\n    <mat-tab label=\\\"Information du compte\\\"> \\n\\n      <form class=\\\"example-form\\\" form #info=\\\"ngForm\\\">\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"Prenom\\\"  disabled value=\\\"{{user.first_name}}\\\">\\n        </mat-form-field>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"Nom\\\"  disabled value=\\\"{{user.last_name}}\\\" >\\n        </mat-form-field>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput name=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" placeholder=\\\"Email\\\" \\n           [formControl]=\\\"email\\\" \\n           pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\"\\n           (keyup)=\\\"checkEmail()\\\"\\n           required >\\n          <mat-error *ngIf=\\\"email.invalid\\\">{{getErrorMessage()}}</mat-error>\\n          <mat-hint *ngIf=\\\"!email.invalid\\\"><span style=\\\"color: red\\\">{{emailAvailable}}</span></mat-hint>\\n\\n        </mat-form-field>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput #pseudo minlength=\\\"5\\\" maxlength=\\\"10\\\" name=\\\"pseudo\\\" [(ngModel)]=\\\"user.pseudo\\\" placeholder=\\\"Pseudo\\\" (change)=\\\"checkPseudo()\\\"\\n           required>\\n           <mat-hint align=\\\"end\\\">{{pseudo.value.length}} / 5  -\\n                  \\n              <span style=\\\"color:green\\\"> {{pseudoEnable}}   </span>\\n               <span style=\\\"color: red\\\">{{pseudoNotEnable}}</span>\\n             \\n              </mat-hint>\\n        </mat-form-field>\\n        <button mat-button color=\\\"primary\\\" [disabled]=\\\"!info.form.valid || email.invalid\\\" (click)=\\\"update()\\\" >Mettre à jour </button>\\n    \\n      </form>\\n    \\n</mat-tab>\\n\\n    <mat-tab label=\\\"Mot de passe\\\">\\n        <form class=\\\"example-form\\\" form #passF=\\\"ngForm\\\">\\n        <mat-form-field>\\n            <input  matInput placeholder=\\\"Nouveau mot de passe\\\" [(ngModel)]=\\\"password\\\" required name=\\\"password\\\"  [type]=\\\"hide ? 'password' : 'text'\\\">\\n            <mat-icon matSuffix (click)=\\\"!hide = hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n          </mat-form-field>\\n          <br>\\n          <mat-form-field>\\n              <input matInput placeholder=\\\"Confirmez le mot de passe\\\" [(ngModel)]=\\\"retype_password\\\" required name=\\\"retype_password\\\"  [type]=\\\"hide ? 'password' : 'text'\\\">\\n              <mat-icon matSuffix (click)=\\\"!hide = hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n            </mat-form-field>\\n            <mat-error>\\n              {{error}}\\n            </mat-error>\\n            <button mat-button color=\\\"primary\\\" [disabled]=\\\"!passF.form.valid\\\" (click)=\\\"passwordUpdate();passF.reset()\\\" >Mettre à jour </button>\\n\\n          </form>\\n    </mat-tab>\\n   \\n    <mat-tab label=\\\"Photo\\\"> Content 3 \\n     mettre a jour votre photo de profil\\n      <image-upload></image-upload>\\n\\n\\n    </mat-tab>\\n  </mat-tab-group>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from \"../auth.service\";\nimport {User} from \"../models/user\";\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-user-settings',\n  templateUrl: './user-settings.component.html',\n  styleUrls: ['./user-settings.component.css']\n})\nexport class UserSettingsComponent implements OnInit {\nuser:{};\nemail = new FormControl('', [Validators.required, Validators.email]);\npassword;\nretype_password;\nerror;\nhide = true;\nmessageFromSpace;\npseudoEnable;\npseudoNotEnable;\nerrormessage;\nemailAvailable;\n  constructor(private authService: AuthService,private snackBar: MatSnackBar) {}\n\n  ngOnInit() {\n    this.userSettings();\n  }\n  getErrorMessage() {\n    return this.email.hasError('required') ? 'Le champs doit etre rempli' :\n        this.email.hasError('email') ? \"Le format de l'adresse Email est invalide\" :\n            '';\n  }\n\n  userSettings() {\n    this.user = this.authService.getData().subscribe(\n      res => {\n        this.user= res.user;\n        console.log(this.user);\n      }\n\n    );\n  }\n\n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 3000,\n    });\n  }\n\n\n\n  checkEmail (){\n    this.authService.checkEmail(this.user)\n    .subscribe(\n      res => {\n          if(res.message){\n            this.emailAvailable = res.message\n          }else {\n            this.emailAvailable =res.error\n          }\n      } \n    )\n  }\n\n  checkPseudo(){\n    this.authService.checkPseudo(this.user)\n    .subscribe(\n      res => {\n        if(res.message){\n          this.pseudoEnable = res.message\n          this.pseudoNotEnable=null\n        }else {\n          this.pseudoNotEnable =res.error\n          this.pseudoEnable=null\n        }\n      }\n       \n  )\n  }\n\n\n\n\n\n\n  update() {\n    this.authService.updateUser(this.user)\n    .subscribe(\n      response => {\n        console.log(response)\n       \n        this.messageFromSpace = response;\n        this.openSnackBar(this.messageFromSpace,null)\n      }\n    )\n  }\n\n  passwordUpdate(){\n    if(this.retype_password === this.password){\n\n      console.log('password match !!');\n    } else {\n      this.error=\"Les mots de passe ne sont pas identiques\";\n      console.log('password does not match !!');\n    }\n    \n  }\n}\n","module.exports = \".card {\\n    width: 200px;\\n  }\\n\\n  .container-fixe {\\n   \\n      margin-top: 2%;\\n      display:flex;\\n      flex-flow: row wrap;\\n      justify-content: space-around;\\n  }\\n\\n  .example-headers-align .mat-expansion-panel-header-title, \\n.example-headers-align .mat-expansion-panel-header-description {\\n  flex-basis: 0;\\n}\\n\\n  .example-headers-align .mat-expansion-panel-header-description {\\n  justify-content: space-between;\\n  align-items: center;\\n}\\n\\n  mat-list-item  img {\\n  width: 46px;\\n  border-radius: 50%;\\n  padding-right: 10px;\\n}\\n\\n  .example-card {\\n  width: 300px;\\n  height: 100%;\\n  margin-bottom: 40px;\\n  padding-bottom: 40px;\\n  background-color: ivory\\n}\\n\\n  .container {\\n  display: flex;\\n  flex-flow: column wrap;\\n  justify-items: center;\\n  padding-left: 25%;\\n\\n}\"","module.exports = \"<div class=\\\"container-fixe\\\">\\n    <div>\\n        <mat-card class=\\\"card\\\">\\n            <mat-card-header>\\n              <mat-card-title>\\n                {{userData.first_name}}\\n                {{userData.last_name}}\\n                    </mat-card-title>\\n              <mat-card-subtitle>\\n                {{userData.pseudo}}\\n                <img src=\\\" {{userData.picture}}\\\" alt=\\\"\\\">\\n              </mat-card-subtitle>\\n            </mat-card-header>\\n            <mat-card-content>\\n            </mat-card-content>\\n          </mat-card>\\n    </div>\\n    \\n    <mat-card class=\\\"example-card\\\">\\n        <article >\\n          <form class=\\\"example-form\\\" #commentF=\\\"ngForm\\\" (submit)=\\\"posted();commentF.reset()\\\" >\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"titre du message\\\" name=\\\"title\\\" id=\\\"titre\\\" [(ngModel)]=\\\"comment.title\\\" required >\\n        </mat-form-field>\\n         <br>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <textarea matInput placeholder=\\\"Poster un commentaire......\\\" name=\\\"comment\\\" [(ngModel)]=\\\"comment.content\\\"></textarea>\\n        </mat-form-field>\\n         <br>\\n        <button type=\\\"submit\\\" mat-fab color=\\\"accent\\\" [disabled]=\\\"!commentF.form.valid\\\">Poster\\n     \\n        </button>\\n  \\n    </form>\\n          \\n      </article>\\n      </mat-card>\\n\\n      <div class=\\\"request\\\">\\n        <form class=\\\"example-form\\\" #search=\\\"ngForm\\\" >\\n        <mat-accordion class=\\\"example-headers-align\\\">\\n          <mat-expansion-panel [expanded]=\\\"step === 0\\\" (opened)=\\\"setStep(0)\\\" hideToggle>\\n            <mat-expansion-panel-header>\\n              <mat-panel-title>\\n                recherche de membre\\n              </mat-panel-title>\\n              <mat-panel-description>\\n          \\n                <mat-icon>account_circle</mat-icon>\\n              </mat-panel-description>\\n            </mat-expansion-panel-header>\\n        \\n            <mat-form-field>\\n              <input matInput placeholder=\\\"nom, prenom ou pseudo\\\" name=\\\"name\\\" [(ngModel)]=\\\"keyword.name\\\" \\n              >\\n              \\n            </mat-form-field>\\n            <button type=\\\"submit\\\" mat-button color=\\\"primary\\\" (click)=\\\"searchfriend()\\\" >OK</button>\\n\\n            <mat-list *ngFor=\\\"let member of resultList\\\">\\n              \\n                <mat-list-item> \\n                 <form class=\\\"example-form\\\" >\\n                    <mat-form-field>\\n                      <input matInput name=\\\"_id\\\" [ngModel]=\\\"member._id\\\">\\n                    </mat-form-field>\\n                    <img src=\\\" {{userData.picture}}\\\" alt=\\\"\\\"> {{member.first_name}} {{member.pseudo}} \\n                    \\n                    <button type=\\\"submit\\\" mat-button (click)=\\\"sendInvitationrequest(member)\\\" >value</button>\\n                  </form>\\n                 </mat-list-item>\\n      \\n               </mat-list>\\n            \\n        \\n            <mat-action-row>\\n              <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\n            </mat-action-row>\\n          </mat-expansion-panel>\\n        \\n          <mat-expansion-panel [expanded]=\\\"step === 1\\\" (opened)=\\\"setStep(1)\\\" hideToggle>\\n            <mat-expansion-panel-header>\\n              <mat-panel-title>\\n                Demandes d'ajout\\n              </mat-panel-title>\\n              <mat-panel-description>\\n                Liste des demandes d'ajout\\n                <mat-icon>map</mat-icon>\\n              </mat-panel-description>\\n            </mat-expansion-panel-header>\\n        \\n            <mat-form-field>\\n              <input matInput placeholder=\\\"Country\\\">\\n            </mat-form-field>\\n        \\n            <mat-action-row>\\n              <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\n            </mat-action-row>\\n          </mat-expansion-panel>\\n        \\n        \\n        \\n        </mat-accordion>\\n      </form>\\n      </div>\\n      \\n     \\n\\n\\n    </div>\\n\\n\\n\\n\\n<div class=\\\"container\\\">\\n  \\n    <mat-card class=\\\"example-card\\\" *ngFor=\\\"let comment of comments\\\">\\n      <mat-card-header>\\n        <div mat-card-avatar class=\\\"example-header-image\\\">\\n          <img src=\\\"{{comment.authorPicture}}\\\" style=\\\"width: 46px;\\\" alt=\\\"\\\">\\n        </div>\\n        <mat-card-title>{{comment.author }} </mat-card-title>\\n        <mat-card-subtitle> Posté le  {{ comment.date| date:'dd-MM-yyyy à HH:mm' }}</mat-card-subtitle>\\n      </mat-card-header>\\n      <h4> {{comment.title}}</h4>\\n     \\n      <mat-card-content>\\n        <p>\\n          {{comment.content}}\\n        </p>\\n      </mat-card-content>\\n     \\n    </mat-card>\\n  </div>\\n\\n\\n<!-- <app-comments></app-comments> -->\\n\"","import {Component, OnInit, Output} from '@angular/core';\nimport { User } from '../models/user';\nimport { HttpInterceptor} from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { AuthService} from '../auth.service';\nimport {CommentService} from '../comment.service';\nimport { WebsocketService } from '../websocket.service';\nimport { subscribeOn } from 'rxjs/operators';\nimport { AngularFireStorage } from 'angularfire2/storage';\nimport { MemberActionService } from '../member-action.service';\nimport { Comment} from '../../app/models/comment';\n\n@Component({\n  selector: 'app-userdata',\n  templateUrl: './userdata.component.html',\n  styleUrls: ['./userdata.component.css']\n})\nexport class UserdataComponent implements OnInit {\nuserData = User;\nstep=0;\nkeyword = {\n  name:''\n};\n\ncomment:Comment ={\n  title: '',\nauthor: '',\ncontent: '',\ndate:null,\nauthorId: '',\nauthorPicture:'',\nexplicit: false\n\n}\nuserPicture:String;\n\ncomments :Array<any>=[];\n\nmember ={\n  first_name:'',\n  pseudo:'',\n  _id:'',\n}\ncurrentUser_id;\nmessageErreur;\nresultList:any[];\n\n  constructor(private commentService: CommentService,\n     private auth: AuthService,\n     private afStorage:AngularFireStorage,\n     \n    \n    ) {\n    \n       this.commentService.onPosted()\n      .subscribe(data => {\n        this.comments.splice(0,0,data)\n        console.log(\"Apres ajout\",this.comments)\n      }\n      );\n  }\n\n  ngOnInit() {\n    \n\n      this.auth.getData()\n    .subscribe(\n\n      data => {\n        data.user.online = true;\n        this.userData =  data.user;\n        console.log('*--**--*',data.user)\n        this.auth.isAdmin=data.user.admin;\n        \n        console.log('mes infos',this.userData)\n        this.currentUser_id= data.user._id;\n        this.comment.author=data.user.first_name + ' ' +data.user.last_name;\n        this.comment.authorId=this.currentUser_id\n        this.comment.authorPicture = data.user.picture;\n      }\n    );\n      \n\n    this.commentService.getMemberComments(this.currentUser_id)\n    .subscribe(\n      res => {\n        this.comments = res.comments;\n      } \n    )\n    \n  }\n\n/*   upload(event) {\n    this.afStorage.upload('/', event.target.files[0]);\n    console.log('fait')\n  } */\n \n  setStep(index: number) {\n    this.step = index;\n  }\n\n  nextStep() {\n    this.step++;\n  }\n\n  prevStep() {\n    this.step--;\n  }\n  \n // Post copmment on space or friend space\n  posted() {\n    this.comment.date=new Date();\n    this.commentService.postMessage(this.comment)\n    \n  }\n\n\n\n\n\n\n\n\n}","import { Injectable } from '@angular/core';\nimport * as io from 'socket.io-client';\nimport { Config } from './config';\nimport {Observable } from 'rxjs';\n// tslint:disable-next-line:import-blacklist\nimport * as Rx from 'rxjs';\nimport {AuthService} from \"./auth.service\";\nimport {User} from \"./models/user\";\nimport { webSocket } from 'rxjs/observable/dom/webSocket';\n\n@Injectable()\nexport class WebsocketService {\n  constructor() {}\n  \n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyAlSqMwKKhmxwcaV2yV0JakW1Z3FC-8d3Q\",\n    authDomain: \"reseau-social-c1b9a.firebaseapp.com\",\n    databaseURL: \"https://reseau-social-c1b9a.firebaseio.com\",\n    projectId: \"reseau-social-c1b9a\",\n    storageBucket: \"reseau-social-c1b9a.appspot.com\",\n    messagingSenderId: \"217716745845\"\n  }\n  \n};\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":""}